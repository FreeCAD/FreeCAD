
// This file is generated by src/Tools/generateTemplates/templateClassPyExport.py out of the XML file
// Every change you make here gets lost in the next full rebuild!
#ifndef PARTDESIGN_BODYPY_H
#define PARTDESIGN_BODYPY_H

#include <Mod/Part/App/BodyBasePy.h>
#include <Mod/PartDesign/App/Body.h>
#include <string>


namespace PartDesign
{

//===========================================================================
// BodyPy - Python wrapper
//===========================================================================

/** The python export class for Body
 */
class PartDesignExport BodyPy : public Part::BodyBasePy
{
protected:
    ~BodyPy() override;

public:
    static PyTypeObject   Type;
    static PyMethodDef    Methods[];
    static PyGetSetDef    GetterSetter[];
    PyTypeObject *GetType() override {return &Type;}

public:
    BodyPy(Body *pcObject, PyTypeObject *T = &Type);
    static PyObject *PyMake(PyTypeObject *, PyObject *, PyObject *);
    int PyInit(PyObject* args, PyObject*k) override;


    using PointerType = Body*;

    PyObject *_repr() override;        // the representation
    std::string representation() const;

    /** @name callbacks and implementers for the python object methods */
    //@{
    /// callback for the insertObject() method
    static PyObject * staticCallback_insertObject (PyObject *self, PyObject *args);
    /// implementer for the insertObject() method
    PyObject*  insertObject(PyObject *args);
    //@}


    /** @name callbacks and implementers for the python object attributes */
    //@{
    ///getter callback for the VisibleFeature attribute
    static PyObject * staticCallback_getVisibleFeature (PyObject *self, void *closure);
    /// getter for the VisibleFeature attribute
    Py::Object getVisibleFeature() const;
    /// setter callback for the VisibleFeature attribute
    static int staticCallback_setVisibleFeature (PyObject *self, PyObject *value, void *closure);
    // no setter method,  VisibleFeature is read only!
    //@}

    /// getter method for special attributes (e.g. dynamic ones)
    PyObject *getCustomAttributes(const char* attr) const;
    /// setter for special attributes (e.g. dynamic ones)
    /// Output: Success=1, Failure=-1, Ignore=0
    int setCustomAttributes(const char* attr, PyObject *obj);
    PyObject *_getattr(const char *attr) override;              // __getattr__ function
    int _setattr(const char *attr, PyObject *value) override;   // __setattr__ function

    /// getter for the object handled by this class
    Body *getBodyPtr() const;

};

}  //namespace PartDesign

#endif  // PARTDESIGN_BODYPY_H


