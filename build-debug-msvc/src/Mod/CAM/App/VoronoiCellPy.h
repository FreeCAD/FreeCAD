
// This file is generated by src/Tools/generateTemplates/templateClassPyExport.py out of the XML file
// Every change you make here gets lost in the next full rebuild!
#ifndef PATH_VORONOICELLPY_H
#define PATH_VORONOICELLPY_H

#include <Base/BaseClassPy.h>
#include <Mod/CAM/App/VoronoiCell.h>
#include <string>


namespace Path
{

//===========================================================================
// VoronoiCellPy - Python wrapper
//===========================================================================

/** The python export class for VoronoiCell
 */
class PathExport VoronoiCellPy : public Base::BaseClassPy
{
protected:
    ~VoronoiCellPy() override;

public:
    static PyTypeObject   Type;
    static PyMethodDef    Methods[];
    static PyObject * richCompare(PyObject *v, PyObject *w, int op);
    static PyGetSetDef    GetterSetter[];
    PyTypeObject *GetType() override {return &Type;}

public:
    VoronoiCellPy(VoronoiCell *pcObject, PyTypeObject *T = &Type);
    static PyObject *PyMake(PyTypeObject *, PyObject *, PyObject *);
    int PyInit(PyObject* args, PyObject*k) override;


    using PointerType = VoronoiCell*;

    PyObject *_repr() override;        // the representation
    std::string representation() const;

    /** @name callbacks and implementers for the python object methods */
    //@{
    /// callback for the containsPoint() method
    static PyObject * staticCallback_containsPoint (PyObject *self, PyObject *args);
    /// implementer for the containsPoint() method
    PyObject*  containsPoint(PyObject *args);
    /// callback for the containsSegment() method
    static PyObject * staticCallback_containsSegment (PyObject *self, PyObject *args);
    /// implementer for the containsSegment() method
    PyObject*  containsSegment(PyObject *args);
    /// callback for the isDegenerate() method
    static PyObject * staticCallback_isDegenerate (PyObject *self, PyObject *args);
    /// implementer for the isDegenerate() method
    PyObject*  isDegenerate(PyObject *args);
    /// callback for the getSource() method
    static PyObject * staticCallback_getSource (PyObject *self, PyObject *args);
    /// implementer for the getSource() method
    PyObject*  getSource(PyObject *args);
    //@}


    /** @name callbacks and implementers for the python object attributes */
    //@{
    ///getter callback for the Index attribute
    static PyObject * staticCallback_getIndex (PyObject *self, void *closure);
    /// getter for the Index attribute
    Py::Long getIndex() const;
    /// setter callback for the Index attribute
    static int staticCallback_setIndex (PyObject *self, PyObject *value, void *closure);
    // no setter method,  Index is read only!
    ///getter callback for the Color attribute
    static PyObject * staticCallback_getColor (PyObject *self, void *closure);
    /// getter for the Color attribute
    Py::Long getColor() const;
    /// setter callback for the Color attribute
    static int staticCallback_setColor (PyObject *self, PyObject *value, void *closure);
    /// setter for the Color attribute
    void setColor(Py::Long arg);
    ///getter callback for the SourceIndex attribute
    static PyObject * staticCallback_getSourceIndex (PyObject *self, void *closure);
    /// getter for the SourceIndex attribute
    Py::Long getSourceIndex() const;
    /// setter callback for the SourceIndex attribute
    static int staticCallback_setSourceIndex (PyObject *self, PyObject *value, void *closure);
    // no setter method,  SourceIndex is read only!
    ///getter callback for the SourceCategory attribute
    static PyObject * staticCallback_getSourceCategory (PyObject *self, void *closure);
    /// getter for the SourceCategory attribute
    Py::Int getSourceCategory() const;
    /// setter callback for the SourceCategory attribute
    static int staticCallback_setSourceCategory (PyObject *self, PyObject *value, void *closure);
    // no setter method,  SourceCategory is read only!
    ///getter callback for the SourceCategoryName attribute
    static PyObject * staticCallback_getSourceCategoryName (PyObject *self, void *closure);
    /// getter for the SourceCategoryName attribute
    Py::String getSourceCategoryName() const;
    /// setter callback for the SourceCategoryName attribute
    static int staticCallback_setSourceCategoryName (PyObject *self, PyObject *value, void *closure);
    // no setter method,  SourceCategoryName is read only!
    ///getter callback for the IncidentEdge attribute
    static PyObject * staticCallback_getIncidentEdge (PyObject *self, void *closure);
    /// getter for the IncidentEdge attribute
    Py::Object getIncidentEdge() const;
    /// setter callback for the IncidentEdge attribute
    static int staticCallback_setIncidentEdge (PyObject *self, PyObject *value, void *closure);
    // no setter method,  IncidentEdge is read only!
    //@}

    /// getter method for special attributes (e.g. dynamic ones)
    PyObject *getCustomAttributes(const char* attr) const;
    /// setter for special attributes (e.g. dynamic ones)
    /// Output: Success=1, Failure=-1, Ignore=0
    int setCustomAttributes(const char* attr, PyObject *obj);
    PyObject *_getattr(const char *attr) override;              // __getattr__ function
    int _setattr(const char *attr, PyObject *value) override;   // __setattr__ function

    /// getter for the object handled by this class
    VoronoiCell *getVoronoiCellPtr() const;

};

}  //namespace Path

#endif  // PATH_VORONOICELLPY_H


