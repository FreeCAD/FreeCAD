
// This file is generated by src/Tools/generateTemplates/templateClassPyExport.py out of the XML file
// Every change you make here gets lost in the next full rebuild!
#ifndef PART_SHAPEFIX_WIREFRAMEPY_H
#define PART_SHAPEFIX_WIREFRAMEPY_H

#include <Mod/Part/App/ShapeFix/ShapeFix_RootPy.h>
#include <ShapeFix_Wireframe.hxx>
#include <string>


namespace Part
{

//===========================================================================
// ShapeFix_WireframePy - Python wrapper
//===========================================================================

/** The python export class for ShapeFix_Wireframe
 */
class PartExport ShapeFix_WireframePy : public Part::ShapeFix_RootPy
{
protected:
    ~ShapeFix_WireframePy() override;

public:
    static PyTypeObject   Type;
    static PyMethodDef    Methods[];
    static PyGetSetDef    GetterSetter[];
    PyTypeObject *GetType() override {return &Type;}

public:
    ShapeFix_WireframePy(ShapeFix_Wireframe *pcObject, PyTypeObject *T = &Type);
    static PyObject *PyMake(PyTypeObject *, PyObject *, PyObject *);
    int PyInit(PyObject* args, PyObject*k) override;


    using PointerType = ShapeFix_Wireframe*;

    PyObject *_repr() override;        // the representation
    std::string representation() const;

    /** @name callbacks and implementers for the python object methods */
    //@{
    /// callback for the clearStatuses() method
    static PyObject * staticCallback_clearStatuses (PyObject *self, PyObject *args);
    /// implementer for the clearStatuses() method
    PyObject*  clearStatuses(PyObject *args);
    /// callback for the load() method
    static PyObject * staticCallback_load (PyObject *self, PyObject *args);
    /// implementer for the load() method
    PyObject*  load(PyObject *args);
    /// callback for the fixWireGaps() method
    static PyObject * staticCallback_fixWireGaps (PyObject *self, PyObject *args);
    /// implementer for the fixWireGaps() method
    PyObject*  fixWireGaps(PyObject *args);
    /// callback for the fixSmallEdges() method
    static PyObject * staticCallback_fixSmallEdges (PyObject *self, PyObject *args);
    /// implementer for the fixSmallEdges() method
    PyObject*  fixSmallEdges(PyObject *args);
    /// callback for the shape() method
    static PyObject * staticCallback_shape (PyObject *self, PyObject *args);
    /// implementer for the shape() method
    PyObject*  shape(PyObject *args);
    //@}


    /** @name callbacks and implementers for the python object attributes */
    //@{
    ///getter callback for the ModeDropSmallEdges attribute
    static PyObject * staticCallback_getModeDropSmallEdges (PyObject *self, void *closure);
    /// getter for the ModeDropSmallEdges attribute
    Py::Boolean getModeDropSmallEdges() const;
    /// setter callback for the ModeDropSmallEdges attribute
    static int staticCallback_setModeDropSmallEdges (PyObject *self, PyObject *value, void *closure);
    /// setter for the ModeDropSmallEdges attribute
    void setModeDropSmallEdges(Py::Boolean arg);
    ///getter callback for the LimitAngle attribute
    static PyObject * staticCallback_getLimitAngle (PyObject *self, void *closure);
    /// getter for the LimitAngle attribute
    Py::Float getLimitAngle() const;
    /// setter callback for the LimitAngle attribute
    static int staticCallback_setLimitAngle (PyObject *self, PyObject *value, void *closure);
    /// setter for the LimitAngle attribute
    void setLimitAngle(Py::Float arg);
    //@}

    /// getter method for special attributes (e.g. dynamic ones)
    PyObject *getCustomAttributes(const char* attr) const;
    /// setter for special attributes (e.g. dynamic ones)
    /// Output: Success=1, Failure=-1, Ignore=0
    int setCustomAttributes(const char* attr, PyObject *obj);
    PyObject *_getattr(const char *attr) override;              // __getattr__ function
    int _setattr(const char *attr, PyObject *value) override;   // __setattr__ function

    /// getter for the object handled by this class
    ShapeFix_Wireframe *getShapeFix_WireframePtr() const;

};

}  //namespace Part

#endif  // PART_SHAPEFIX_WIREFRAMEPY_H


