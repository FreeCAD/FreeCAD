
// This file is generated by src/Tools/generateTemplates/templateClassPyExport.py out of the XML file
// Every change you make here gets lost in the next full rebuild!
#ifndef PART_POLYHLRTOSHAPEPY_H
#define PART_POLYHLRTOSHAPEPY_H

#include <Base/PyObjectBase.h>
#include <HLRBRep_PolyHLRToShape.hxx>
#include <string>


namespace Part
{

//===========================================================================
// PolyHLRToShapePy - Python wrapper
//===========================================================================

/** The python export class for HLRBRep_PolyHLRToShape
 */
class PartExport PolyHLRToShapePy : public Base::PyObjectBase
{
protected:
    ~PolyHLRToShapePy() override;

public:
    static PyTypeObject   Type;
    static PyMethodDef    Methods[];
    static PyGetSetDef    GetterSetter[];
    PyTypeObject *GetType() override {return &Type;}

public:
    PolyHLRToShapePy(HLRBRep_PolyHLRToShape *pcObject, PyTypeObject *T = &Type);
    static PyObject *PyMake(PyTypeObject *, PyObject *, PyObject *);
    int PyInit(PyObject* args, PyObject*k) override;


    using PointerType = HLRBRep_PolyHLRToShape*;

    PyObject *_repr() override;        // the representation
    std::string representation() const;

    /** @name callbacks and implementers for the python object methods */
    //@{
    /// callback for the update() method
    static PyObject * staticCallback_update (PyObject *self, PyObject *args);
    /// implementer for the update() method
    PyObject*  update(PyObject *args);
    /// callback for the show() method
    static PyObject * staticCallback_show (PyObject *self, PyObject *args);
    /// implementer for the show() method
    PyObject*  show(PyObject *args);
    /// callback for the hide() method
    static PyObject * staticCallback_hide (PyObject *self, PyObject *args);
    /// implementer for the hide() method
    PyObject*  hide(PyObject *args);
    /// callback for the vCompound() method
    static PyObject * staticCallback_vCompound (PyObject *self, PyObject *args);
    /// implementer for the vCompound() method
    PyObject*  vCompound(PyObject *args);
    /// callback for the Rg1LineVCompound() method
    static PyObject * staticCallback_Rg1LineVCompound (PyObject *self, PyObject *args);
    /// implementer for the Rg1LineVCompound() method
    PyObject*  Rg1LineVCompound(PyObject *args);
    /// callback for the RgNLineVCompound() method
    static PyObject * staticCallback_RgNLineVCompound (PyObject *self, PyObject *args);
    /// implementer for the RgNLineVCompound() method
    PyObject*  RgNLineVCompound(PyObject *args);
    /// callback for the outLineVCompound() method
    static PyObject * staticCallback_outLineVCompound (PyObject *self, PyObject *args);
    /// implementer for the outLineVCompound() method
    PyObject*  outLineVCompound(PyObject *args);
    /// callback for the hCompound() method
    static PyObject * staticCallback_hCompound (PyObject *self, PyObject *args);
    /// implementer for the hCompound() method
    PyObject*  hCompound(PyObject *args);
    /// callback for the Rg1LineHCompound() method
    static PyObject * staticCallback_Rg1LineHCompound (PyObject *self, PyObject *args);
    /// implementer for the Rg1LineHCompound() method
    PyObject*  Rg1LineHCompound(PyObject *args);
    /// callback for the RgNLineHCompound() method
    static PyObject * staticCallback_RgNLineHCompound (PyObject *self, PyObject *args);
    /// implementer for the RgNLineHCompound() method
    PyObject*  RgNLineHCompound(PyObject *args);
    /// callback for the outLineHCompound() method
    static PyObject * staticCallback_outLineHCompound (PyObject *self, PyObject *args);
    /// implementer for the outLineHCompound() method
    PyObject*  outLineHCompound(PyObject *args);
    //@}


    /** @name callbacks and implementers for the python object attributes */
    //@{
    //@}

    /// getter method for special attributes (e.g. dynamic ones)
    PyObject *getCustomAttributes(const char* attr) const;
    /// setter for special attributes (e.g. dynamic ones)
    /// Output: Success=1, Failure=-1, Ignore=0
    int setCustomAttributes(const char* attr, PyObject *obj);
    PyObject *_getattr(const char *attr) override;              // __getattr__ function
    int _setattr(const char *attr, PyObject *value) override;   // __setattr__ function

    /// getter for the object handled by this class
    HLRBRep_PolyHLRToShape *getHLRBRep_PolyHLRToShapePtr() const;

};

}  //namespace Part

#endif  // PART_POLYHLRTOSHAPEPY_H


