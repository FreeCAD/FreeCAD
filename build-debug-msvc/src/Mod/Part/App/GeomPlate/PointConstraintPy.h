
// This file is generated by src/Tools/generateTemplates/templateClassPyExport.py out of the XML file
// Every change you make here gets lost in the next full rebuild!
#ifndef PART_POINTCONSTRAINTPY_H
#define PART_POINTCONSTRAINTPY_H

#include <Base/PyObjectBase.h>
#include <GeomPlate_PointConstraint.hxx>
#include <string>


namespace Part
{

//===========================================================================
// PointConstraintPy - Python wrapper
//===========================================================================

/** The python export class for GeomPlate_PointConstraint
 */
class PartExport PointConstraintPy : public Base::PyObjectBase
{
protected:
    ~PointConstraintPy() override;

public:
    static PyTypeObject   Type;
    static PyMethodDef    Methods[];
    static PyGetSetDef    GetterSetter[];
    PyTypeObject *GetType() override {return &Type;}

public:
    PointConstraintPy(GeomPlate_PointConstraint *pcObject, PyTypeObject *T = &Type);
    static PyObject *PyMake(PyTypeObject *, PyObject *, PyObject *);
    int PyInit(PyObject* args, PyObject*k) override;


    using PointerType = GeomPlate_PointConstraint*;

    PyObject *_repr() override;        // the representation
    std::string representation() const;

    /** @name callbacks and implementers for the python object methods */
    //@{
    /// callback for the setOrder() method
    static PyObject * staticCallback_setOrder (PyObject *self, PyObject *args);
    /// implementer for the setOrder() method
    PyObject*  setOrder(PyObject *args);
    /// callback for the order() method
    static PyObject * staticCallback_order (PyObject *self, PyObject *args);
    /// implementer for the order() method
    PyObject*  order(PyObject *args);
    /// callback for the G0Criterion() method
    static PyObject * staticCallback_G0Criterion (PyObject *self, PyObject *args);
    /// implementer for the G0Criterion() method
    PyObject*  G0Criterion(PyObject *args);
    /// callback for the G1Criterion() method
    static PyObject * staticCallback_G1Criterion (PyObject *self, PyObject *args);
    /// implementer for the G1Criterion() method
    PyObject*  G1Criterion(PyObject *args);
    /// callback for the G2Criterion() method
    static PyObject * staticCallback_G2Criterion (PyObject *self, PyObject *args);
    /// implementer for the G2Criterion() method
    PyObject*  G2Criterion(PyObject *args);
    /// callback for the setG0Criterion() method
    static PyObject * staticCallback_setG0Criterion (PyObject *self, PyObject *args);
    /// implementer for the setG0Criterion() method
    PyObject*  setG0Criterion(PyObject *args);
    /// callback for the setG1Criterion() method
    static PyObject * staticCallback_setG1Criterion (PyObject *self, PyObject *args);
    /// implementer for the setG1Criterion() method
    PyObject*  setG1Criterion(PyObject *args);
    /// callback for the setG2Criterion() method
    static PyObject * staticCallback_setG2Criterion (PyObject *self, PyObject *args);
    /// implementer for the setG2Criterion() method
    PyObject*  setG2Criterion(PyObject *args);
    /// callback for the hasPnt2dOnSurf() method
    static PyObject * staticCallback_hasPnt2dOnSurf (PyObject *self, PyObject *args);
    /// implementer for the hasPnt2dOnSurf() method
    PyObject*  hasPnt2dOnSurf(PyObject *args);
    /// callback for the setPnt2dOnSurf() method
    static PyObject * staticCallback_setPnt2dOnSurf (PyObject *self, PyObject *args);
    /// implementer for the setPnt2dOnSurf() method
    PyObject*  setPnt2dOnSurf(PyObject *args);
    /// callback for the pnt2dOnSurf() method
    static PyObject * staticCallback_pnt2dOnSurf (PyObject *self, PyObject *args);
    /// implementer for the pnt2dOnSurf() method
    PyObject*  pnt2dOnSurf(PyObject *args);
    //@}


    /** @name callbacks and implementers for the python object attributes */
    //@{
    //@}

    /// getter method for special attributes (e.g. dynamic ones)
    PyObject *getCustomAttributes(const char* attr) const;
    /// setter for special attributes (e.g. dynamic ones)
    /// Output: Success=1, Failure=-1, Ignore=0
    int setCustomAttributes(const char* attr, PyObject *obj);
    PyObject *_getattr(const char *attr) override;              // __getattr__ function
    int _setattr(const char *attr, PyObject *value) override;   // __setattr__ function

    /// getter for the object handled by this class
    GeomPlate_PointConstraint *getGeomPlate_PointConstraintPtr() const;

};

}  //namespace Part

#endif  // PART_POINTCONSTRAINTPY_H


