
// This file is generated by src/Tools/generateTemplates/templateClassPyExport.py out of the XML file
// Every change you make here gets lost in the next full rebuild!
#ifndef MATERIALS_MATERIALFILTERPY_H
#define MATERIALS_MATERIALFILTERPY_H

#include <Base/BaseClassPy.h>
#include <Mod/Material/App/MaterialFilter.h>
#include <string>


namespace Materials
{

//===========================================================================
// MaterialFilterPy - Python wrapper
//===========================================================================

/** The python export class for MaterialFilter
 */
class MaterialsExport MaterialFilterPy : public Base::BaseClassPy
{
protected:
    ~MaterialFilterPy() override;

public:
    static PyTypeObject   Type;
    static PyMethodDef    Methods[];
    static PyGetSetDef    GetterSetter[];
    PyTypeObject *GetType() override {return &Type;}

public:
    MaterialFilterPy(MaterialFilter *pcObject, PyTypeObject *T = &Type);
    static PyObject *PyMake(PyTypeObject *, PyObject *, PyObject *);
    int PyInit(PyObject* args, PyObject*k) override;


    using PointerType = MaterialFilter*;

    PyObject *_repr() override;        // the representation
    std::string representation() const;

    /** @name callbacks and implementers for the python object methods */
    //@{
    //@}


    /** @name callbacks and implementers for the python object attributes */
    //@{
    ///getter callback for the Name attribute
    static PyObject * staticCallback_getName (PyObject *self, void *closure);
    /// getter for the Name attribute
    Py::String getName() const;
    /// setter callback for the Name attribute
    static int staticCallback_setName (PyObject *self, PyObject *value, void *closure);
    /// setter for the Name attribute
    void setName(Py::String arg);
    ///getter callback for the RequiredModels attribute
    static PyObject * staticCallback_getRequiredModels (PyObject *self, void *closure);
    /// getter for the RequiredModels attribute
    Py::List getRequiredModels() const;
    /// setter callback for the RequiredModels attribute
    static int staticCallback_setRequiredModels (PyObject *self, PyObject *value, void *closure);
    /// setter for the RequiredModels attribute
    void setRequiredModels(Py::List arg);
    ///getter callback for the RequiredCompleteModels attribute
    static PyObject * staticCallback_getRequiredCompleteModels (PyObject *self, void *closure);
    /// getter for the RequiredCompleteModels attribute
    Py::List getRequiredCompleteModels() const;
    /// setter callback for the RequiredCompleteModels attribute
    static int staticCallback_setRequiredCompleteModels (PyObject *self, PyObject *value, void *closure);
    /// setter for the RequiredCompleteModels attribute
    void setRequiredCompleteModels(Py::List arg);
    //@}

    /// getter method for special attributes (e.g. dynamic ones)
    PyObject *getCustomAttributes(const char* attr) const;
    /// setter for special attributes (e.g. dynamic ones)
    /// Output: Success=1, Failure=-1, Ignore=0
    int setCustomAttributes(const char* attr, PyObject *obj);
    PyObject *_getattr(const char *attr) override;              // __getattr__ function
    int _setattr(const char *attr, PyObject *value) override;   // __setattr__ function

    /// getter for the object handled by this class
    MaterialFilter *getMaterialFilterPtr() const;

};

}  //namespace Materials

#endif  // MATERIALS_MATERIALFILTERPY_H


