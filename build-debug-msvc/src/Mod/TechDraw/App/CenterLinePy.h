
// This file is generated by src/Tools/generateTemplates/templateClassPyExport.py out of the XML file
// Every change you make here gets lost in the next full rebuild!
#ifndef TECHDRAW_CENTERLINEPY_H
#define TECHDRAW_CENTERLINEPY_H

#include <Base/PyObjectBase.h>
#include <Mod/TechDraw/App/CenterLine.h>
#include <string>


namespace TechDraw
{

//===========================================================================
// CenterLinePy - Python wrapper
//===========================================================================

/** The python export class for CenterLine
 */
class TechDrawExport CenterLinePy : public Base::PyObjectBase
{
protected:
    ~CenterLinePy() override;

public:
    static PyTypeObject   Type;
    static PyMethodDef    Methods[];
    static PyGetSetDef    GetterSetter[];
    PyTypeObject *GetType() override {return &Type;}

public:
    CenterLinePy(CenterLine *pcObject, PyTypeObject *T = &Type);
    static PyObject *PyMake(PyTypeObject *, PyObject *, PyObject *);
    int PyInit(PyObject* args, PyObject*k) override;


    using PointerType = CenterLine*;

    PyObject *_repr() override;        // the representation
    std::string representation() const;

    /** @name callbacks and implementers for the python object methods */
    //@{
    /// callback for the clone() method
    static PyObject * staticCallback_clone (PyObject *self, PyObject *args);
    /// implementer for the clone() method
    PyObject*  clone(PyObject *args);
    /// callback for the copy() method
    static PyObject * staticCallback_copy (PyObject *self, PyObject *args);
    /// implementer for the copy() method
    PyObject*  copy(PyObject *args);
    //@}


    /** @name callbacks and implementers for the python object attributes */
    //@{
    ///getter callback for the Tag attribute
    static PyObject * staticCallback_getTag (PyObject *self, void *closure);
    /// getter for the Tag attribute
    Py::String getTag() const;
    /// setter callback for the Tag attribute
    static int staticCallback_setTag (PyObject *self, PyObject *value, void *closure);
    // no setter method,  Tag is read only!
    ///getter callback for the Type attribute
    static PyObject * staticCallback_getType (PyObject *self, void *closure);
    /// getter for the Type attribute
    Py::Long getType() const;
    /// setter callback for the Type attribute
    static int staticCallback_setType (PyObject *self, PyObject *value, void *closure);
    // no setter method,  Type is read only!
    ///getter callback for the Mode attribute
    static PyObject * staticCallback_getMode (PyObject *self, void *closure);
    /// getter for the Mode attribute
    Py::Long getMode() const;
    /// setter callback for the Mode attribute
    static int staticCallback_setMode (PyObject *self, PyObject *value, void *closure);
    /// setter for the Mode attribute
    void setMode(Py::Long arg);
    ///getter callback for the Format attribute
    static PyObject * staticCallback_getFormat (PyObject *self, void *closure);
    /// getter for the Format attribute
    Py::Dict getFormat() const;
    /// setter callback for the Format attribute
    static int staticCallback_setFormat (PyObject *self, PyObject *value, void *closure);
    /// setter for the Format attribute
    void setFormat(Py::Dict arg);
    ///getter callback for the HorizShift attribute
    static PyObject * staticCallback_getHorizShift (PyObject *self, void *closure);
    /// getter for the HorizShift attribute
    Py::Float getHorizShift() const;
    /// setter callback for the HorizShift attribute
    static int staticCallback_setHorizShift (PyObject *self, PyObject *value, void *closure);
    /// setter for the HorizShift attribute
    void setHorizShift(Py::Float arg);
    ///getter callback for the VertShift attribute
    static PyObject * staticCallback_getVertShift (PyObject *self, void *closure);
    /// getter for the VertShift attribute
    Py::Float getVertShift() const;
    /// setter callback for the VertShift attribute
    static int staticCallback_setVertShift (PyObject *self, PyObject *value, void *closure);
    /// setter for the VertShift attribute
    void setVertShift(Py::Float arg);
    ///getter callback for the Rotation attribute
    static PyObject * staticCallback_getRotation (PyObject *self, void *closure);
    /// getter for the Rotation attribute
    Py::Float getRotation() const;
    /// setter callback for the Rotation attribute
    static int staticCallback_setRotation (PyObject *self, PyObject *value, void *closure);
    /// setter for the Rotation attribute
    void setRotation(Py::Float arg);
    ///getter callback for the Extension attribute
    static PyObject * staticCallback_getExtension (PyObject *self, void *closure);
    /// getter for the Extension attribute
    Py::Float getExtension() const;
    /// setter callback for the Extension attribute
    static int staticCallback_setExtension (PyObject *self, PyObject *value, void *closure);
    /// setter for the Extension attribute
    void setExtension(Py::Float arg);
    ///getter callback for the Flip attribute
    static PyObject * staticCallback_getFlip (PyObject *self, void *closure);
    /// getter for the Flip attribute
    Py::Boolean getFlip() const;
    /// setter callback for the Flip attribute
    static int staticCallback_setFlip (PyObject *self, PyObject *value, void *closure);
    /// setter for the Flip attribute
    void setFlip(Py::Boolean arg);
    ///getter callback for the Edges attribute
    static PyObject * staticCallback_getEdges (PyObject *self, void *closure);
    /// getter for the Edges attribute
    Py::List getEdges() const;
    /// setter callback for the Edges attribute
    static int staticCallback_setEdges (PyObject *self, PyObject *value, void *closure);
    /// setter for the Edges attribute
    void setEdges(Py::List arg);
    ///getter callback for the Faces attribute
    static PyObject * staticCallback_getFaces (PyObject *self, void *closure);
    /// getter for the Faces attribute
    Py::List getFaces() const;
    /// setter callback for the Faces attribute
    static int staticCallback_setFaces (PyObject *self, PyObject *value, void *closure);
    /// setter for the Faces attribute
    void setFaces(Py::List arg);
    ///getter callback for the Points attribute
    static PyObject * staticCallback_getPoints (PyObject *self, void *closure);
    /// getter for the Points attribute
    Py::List getPoints() const;
    /// setter callback for the Points attribute
    static int staticCallback_setPoints (PyObject *self, PyObject *value, void *closure);
    /// setter for the Points attribute
    void setPoints(Py::List arg);
    //@}

    /// getter method for special attributes (e.g. dynamic ones)
    PyObject *getCustomAttributes(const char* attr) const;
    /// setter for special attributes (e.g. dynamic ones)
    /// Output: Success=1, Failure=-1, Ignore=0
    int setCustomAttributes(const char* attr, PyObject *obj);
    PyObject *_getattr(const char *attr) override;              // __getattr__ function
    int _setattr(const char *attr, PyObject *value) override;   // __setattr__ function

    /// getter for the object handled by this class
    CenterLine *getCenterLinePtr() const;

};

}  //namespace TechDraw

#endif  // TECHDRAW_CENTERLINEPY_H


