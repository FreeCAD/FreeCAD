
// This file is generated by src/Tools/generateTemplates/templateClassPyExport.py out of the XML file
// Every change you make here gets lost in the next full rebuild!
#ifndef ASSEMBLYGUI_VIEWPROVIDERASSEMBLYPY_H
#define ASSEMBLYGUI_VIEWPROVIDERASSEMBLYPY_H

#include <Gui/ViewProviderPy.h>
#include <Mod/Assembly/Gui/ViewProviderAssembly.h>
#include <string>


namespace AssemblyGui
{

//===========================================================================
// ViewProviderAssemblyPy - Python wrapper
//===========================================================================

/** The python export class for ViewProviderAssembly
 */
class AssemblyGuiExport ViewProviderAssemblyPy : public Gui::ViewProviderPy
{
protected:
    ~ViewProviderAssemblyPy() override;

public:
    static PyTypeObject   Type;
    static PyMethodDef    Methods[];
    static PyGetSetDef    GetterSetter[];
    PyTypeObject *GetType() override {return &Type;}

public:
    ViewProviderAssemblyPy(ViewProviderAssembly *pcObject, PyTypeObject *T = &Type);
    static PyObject *PyMake(PyTypeObject *, PyObject *, PyObject *);
    int PyInit(PyObject* args, PyObject*k) override;


    using PointerType = ViewProviderAssembly*;

    PyObject *_repr() override;        // the representation
    std::string representation() const;

    /** @name callbacks and implementers for the python object methods */
    //@{
    /// callback for the getDragger() method
    static PyObject * staticCallback_getDragger (PyObject *self, PyObject *args);
    /// implementer for the getDragger() method
    PyObject*  getDragger(PyObject *args);
    //@}


    /** @name callbacks and implementers for the python object attributes */
    //@{
    ///getter callback for the EnableMovement attribute
    static PyObject * staticCallback_getEnableMovement (PyObject *self, void *closure);
    /// getter for the EnableMovement attribute
    Py::Boolean getEnableMovement() const;
    /// setter callback for the EnableMovement attribute
    static int staticCallback_setEnableMovement (PyObject *self, PyObject *value, void *closure);
    /// setter for the EnableMovement attribute
    void setEnableMovement(Py::Boolean arg);
    ///getter callback for the MoveOnlyPreselected attribute
    static PyObject * staticCallback_getMoveOnlyPreselected (PyObject *self, void *closure);
    /// getter for the MoveOnlyPreselected attribute
    Py::Boolean getMoveOnlyPreselected() const;
    /// setter callback for the MoveOnlyPreselected attribute
    static int staticCallback_setMoveOnlyPreselected (PyObject *self, PyObject *value, void *closure);
    /// setter for the MoveOnlyPreselected attribute
    void setMoveOnlyPreselected(Py::Boolean arg);
    ///getter callback for the MoveInCommand attribute
    static PyObject * staticCallback_getMoveInCommand (PyObject *self, void *closure);
    /// getter for the MoveInCommand attribute
    Py::Boolean getMoveInCommand() const;
    /// setter callback for the MoveInCommand attribute
    static int staticCallback_setMoveInCommand (PyObject *self, PyObject *value, void *closure);
    /// setter for the MoveInCommand attribute
    void setMoveInCommand(Py::Boolean arg);
    ///getter callback for the DraggerVisibility attribute
    static PyObject * staticCallback_getDraggerVisibility (PyObject *self, void *closure);
    /// getter for the DraggerVisibility attribute
    Py::Boolean getDraggerVisibility() const;
    /// setter callback for the DraggerVisibility attribute
    static int staticCallback_setDraggerVisibility (PyObject *self, PyObject *value, void *closure);
    /// setter for the DraggerVisibility attribute
    void setDraggerVisibility(Py::Boolean arg);
    ///getter callback for the DraggerPlacement attribute
    static PyObject * staticCallback_getDraggerPlacement (PyObject *self, void *closure);
    /// getter for the DraggerPlacement attribute
    Py::Object getDraggerPlacement() const;
    /// setter callback for the DraggerPlacement attribute
    static int staticCallback_setDraggerPlacement (PyObject *self, PyObject *value, void *closure);
    /// setter for the DraggerPlacement attribute
    void setDraggerPlacement(Py::Object arg);
    //@}

    /// getter method for special attributes (e.g. dynamic ones)
    PyObject *getCustomAttributes(const char* attr) const;
    /// setter for special attributes (e.g. dynamic ones)
    /// Output: Success=1, Failure=-1, Ignore=0
    int setCustomAttributes(const char* attr, PyObject *obj);
    PyObject *_getattr(const char *attr) override;              // __getattr__ function
    int _setattr(const char *attr, PyObject *value) override;   // __setattr__ function

    /// getter for the object handled by this class
    ViewProviderAssembly *getViewProviderAssemblyPtr() const;

};

}  //namespace AssemblyGui

#endif  // ASSEMBLYGUI_VIEWPROVIDERASSEMBLYPY_H


