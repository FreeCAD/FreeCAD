
// This file is generated by src/Tools/generateTemplates/templateClassPyExport.py out of the XML file
// Every change you make here gets lost in the next full rebuild!
#ifndef GUI_AXISORIGINPY_H
#define GUI_AXISORIGINPY_H

#include <Base/BaseClassPy.h>
#include <Gui/AxisOrigin.h>
#include <string>


namespace Gui
{

//===========================================================================
// AxisOriginPy - Python wrapper
//===========================================================================

/** The python export class for AxisOrigin
 */
class GuiExport AxisOriginPy : public Base::BaseClassPy
{
protected:
    ~AxisOriginPy() override;

public:
    static PyTypeObject   Type;
    static PyMethodDef    Methods[];
    static PyGetSetDef    GetterSetter[];
    PyTypeObject *GetType() override {return &Type;}

public:
    AxisOriginPy(AxisOrigin *pcObject, PyTypeObject *T = &Type);
    static PyObject *PyMake(PyTypeObject *, PyObject *, PyObject *);
    int PyInit(PyObject* args, PyObject*k) override;


    using PointerType = AxisOrigin*;

    PyObject *_repr() override;        // the representation
    std::string representation() const;

    /** @name callbacks and implementers for the python object methods */
    //@{
    /// callback for the getElementPicked() method
    static PyObject * staticCallback_getElementPicked (PyObject *self, PyObject *args);
    /// implementer for the getElementPicked() method
    PyObject*  getElementPicked(PyObject *args);
    /// callback for the getDetailPath() method
    static PyObject * staticCallback_getDetailPath (PyObject *self, PyObject *args);
    /// implementer for the getDetailPath() method
    PyObject*  getDetailPath(PyObject *args);
    //@}


    /** @name callbacks and implementers for the python object attributes */
    //@{
    ///getter callback for the AxisLength attribute
    static PyObject * staticCallback_getAxisLength (PyObject *self, void *closure);
    /// getter for the AxisLength attribute
    Py::Float getAxisLength() const;
    /// setter callback for the AxisLength attribute
    static int staticCallback_setAxisLength (PyObject *self, PyObject *value, void *closure);
    /// setter for the AxisLength attribute
    void setAxisLength(Py::Float arg);
    ///getter callback for the LineWidth attribute
    static PyObject * staticCallback_getLineWidth (PyObject *self, void *closure);
    /// getter for the LineWidth attribute
    Py::Float getLineWidth() const;
    /// setter callback for the LineWidth attribute
    static int staticCallback_setLineWidth (PyObject *self, PyObject *value, void *closure);
    /// setter for the LineWidth attribute
    void setLineWidth(Py::Float arg);
    ///getter callback for the PointSize attribute
    static PyObject * staticCallback_getPointSize (PyObject *self, void *closure);
    /// getter for the PointSize attribute
    Py::Float getPointSize() const;
    /// setter callback for the PointSize attribute
    static int staticCallback_setPointSize (PyObject *self, PyObject *value, void *closure);
    /// setter for the PointSize attribute
    void setPointSize(Py::Float arg);
    ///getter callback for the Scale attribute
    static PyObject * staticCallback_getScale (PyObject *self, void *closure);
    /// getter for the Scale attribute
    Py::Float getScale() const;
    /// setter callback for the Scale attribute
    static int staticCallback_setScale (PyObject *self, PyObject *value, void *closure);
    /// setter for the Scale attribute
    void setScale(Py::Float arg);
    ///getter callback for the Plane attribute
    static PyObject * staticCallback_getPlane (PyObject *self, void *closure);
    /// getter for the Plane attribute
    Py::Tuple getPlane() const;
    /// setter callback for the Plane attribute
    static int staticCallback_setPlane (PyObject *self, PyObject *value, void *closure);
    /// setter for the Plane attribute
    void setPlane(Py::Tuple arg);
    ///getter callback for the Labels attribute
    static PyObject * staticCallback_getLabels (PyObject *self, void *closure);
    /// getter for the Labels attribute
    Py::Dict getLabels() const;
    /// setter callback for the Labels attribute
    static int staticCallback_setLabels (PyObject *self, PyObject *value, void *closure);
    /// setter for the Labels attribute
    void setLabels(Py::Dict arg);
    ///getter callback for the Node attribute
    static PyObject * staticCallback_getNode (PyObject *self, void *closure);
    /// getter for the Node attribute
    Py::Object getNode() const;
    /// setter callback for the Node attribute
    static int staticCallback_setNode (PyObject *self, PyObject *value, void *closure);
    // no setter method,  Node is read only!
    //@}

    /// getter method for special attributes (e.g. dynamic ones)
    PyObject *getCustomAttributes(const char* attr) const;
    /// setter for special attributes (e.g. dynamic ones)
    /// Output: Success=1, Failure=-1, Ignore=0
    int setCustomAttributes(const char* attr, PyObject *obj);
    PyObject *_getattr(const char *attr) override;              // __getattr__ function
    int _setattr(const char *attr, PyObject *value) override;   // __setattr__ function

    /// getter for the object handled by this class
    AxisOrigin *getAxisOriginPtr() const;

};

}  //namespace Gui

#endif  // GUI_AXISORIGINPY_H


