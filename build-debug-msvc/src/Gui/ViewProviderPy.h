
// This file is generated by src/Tools/generateTemplates/templateClassPyExport.py out of the XML file
// Every change you make here gets lost in the next full rebuild!
#ifndef GUI_VIEWPROVIDERPY_H
#define GUI_VIEWPROVIDERPY_H

#include <App/ExtensionContainerPy.h>
#include <Gui/ViewProvider.h>
#include <string>


namespace Gui
{

//===========================================================================
// ViewProviderPy - Python wrapper
//===========================================================================

/** The python export class for ViewProvider
 */
class GuiExport ViewProviderPy : public App::ExtensionContainerPy
{
protected:
    ~ViewProviderPy() override;

public:
    static PyTypeObject   Type;
    static PyMethodDef    Methods[];
    static PyGetSetDef    GetterSetter[];
    PyTypeObject *GetType() override {return &Type;}

public:
    ViewProviderPy(ViewProvider *pcObject, PyTypeObject *T = &Type);
    static PyObject *PyMake(PyTypeObject *, PyObject *, PyObject *);
    int PyInit(PyObject* args, PyObject*k) override;


    using PointerType = ViewProvider*;

    PyObject *_repr() override;        // the representation
    std::string representation() const;

    /** @name callbacks and implementers for the python object methods */
    //@{
    /// callback for the addProperty() method
    static PyObject * staticCallback_addProperty (PyObject *self, PyObject *args);
    /// implementer for the addProperty() method
    PyObject*  addProperty(PyObject *args);
    /// callback for the removeProperty() method
    static PyObject * staticCallback_removeProperty (PyObject *self, PyObject *args);
    /// implementer for the removeProperty() method
    PyObject*  removeProperty(PyObject *args);
    /// callback for the supportedProperties() method
    static PyObject * staticCallback_supportedProperties (PyObject *self, PyObject *args);
    /// implementer for the supportedProperties() method
    PyObject*  supportedProperties(PyObject *args);
    /// callback for the show() method
    static PyObject * staticCallback_show (PyObject *self, PyObject *args);
    /// implementer for the show() method
    PyObject*  show(PyObject *args);
    /// callback for the hide() method
    static PyObject * staticCallback_hide (PyObject *self, PyObject *args);
    /// implementer for the hide() method
    PyObject*  hide(PyObject *args);
    /// callback for the isVisible() method
    static PyObject * staticCallback_isVisible (PyObject *self, PyObject *args);
    /// implementer for the isVisible() method
    PyObject*  isVisible(PyObject *args);
    /// callback for the canDragObject() method
    static PyObject * staticCallback_canDragObject (PyObject *self, PyObject *args);
    /// implementer for the canDragObject() method
    PyObject*  canDragObject(PyObject *args);
    /// callback for the dragObject() method
    static PyObject * staticCallback_dragObject (PyObject *self, PyObject *args);
    /// implementer for the dragObject() method
    PyObject*  dragObject(PyObject *args);
    /// callback for the canDropObject() method
    static PyObject * staticCallback_canDropObject (PyObject *self, PyObject *args, PyObject *kwd);
    /// implementer for the canDropObject() method
    PyObject*  canDropObject(PyObject *args, PyObject *kwd);
    /// callback for the dropObject() method
    static PyObject * staticCallback_dropObject (PyObject *self, PyObject *args, PyObject *kwd);
    /// implementer for the dropObject() method
    PyObject*  dropObject(PyObject *args, PyObject *kwd);
    /// callback for the canDragAndDropObject() method
    static PyObject * staticCallback_canDragAndDropObject (PyObject *self, PyObject *args);
    /// implementer for the canDragAndDropObject() method
    PyObject*  canDragAndDropObject(PyObject *args);
    /// callback for the replaceObject() method
    static PyObject * staticCallback_replaceObject (PyObject *self, PyObject *args);
    /// implementer for the replaceObject() method
    PyObject*  replaceObject(PyObject *args);
    /// callback for the doubleClicked() method
    static PyObject * staticCallback_doubleClicked (PyObject *self, PyObject *args);
    /// implementer for the doubleClicked() method
    PyObject*  doubleClicked(PyObject *args);
    /// callback for the addDisplayMode() method
    static PyObject * staticCallback_addDisplayMode (PyObject *self, PyObject *args);
    /// implementer for the addDisplayMode() method
    PyObject*  addDisplayMode(PyObject *args);
    /// callback for the listDisplayModes() method
    static PyObject * staticCallback_listDisplayModes (PyObject *self, PyObject *args);
    /// implementer for the listDisplayModes() method
    PyObject*  listDisplayModes(PyObject *args);
    /// callback for the toString() method
    static PyObject * staticCallback_toString (PyObject *self, PyObject *args);
    /// implementer for the toString() method
    PyObject*  toString(PyObject *args);
    /// callback for the setTransformation() method
    static PyObject * staticCallback_setTransformation (PyObject *self, PyObject *args);
    /// implementer for the setTransformation() method
    PyObject*  setTransformation(PyObject *args);
    /// callback for the claimChildren() method
    static PyObject * staticCallback_claimChildren (PyObject *self, PyObject *args);
    /// implementer for the claimChildren() method
    PyObject*  claimChildren(PyObject *args);
    /// callback for the claimChildrenRecursive() method
    static PyObject * staticCallback_claimChildrenRecursive (PyObject *self, PyObject *args);
    /// implementer for the claimChildrenRecursive() method
    PyObject*  claimChildrenRecursive(PyObject *args);
    /// callback for the partialRender() method
    static PyObject * staticCallback_partialRender (PyObject *self, PyObject *args);
    /// implementer for the partialRender() method
    PyObject*  partialRender(PyObject *args);
    /// callback for the getElementColors() method
    static PyObject * staticCallback_getElementColors (PyObject *self, PyObject *args);
    /// implementer for the getElementColors() method
    PyObject*  getElementColors(PyObject *args);
    /// callback for the setElementColors() method
    static PyObject * staticCallback_setElementColors (PyObject *self, PyObject *args);
    /// implementer for the setElementColors() method
    PyObject*  setElementColors(PyObject *args);
    /// callback for the getElementPicked() method
    static PyObject * staticCallback_getElementPicked (PyObject *self, PyObject *args);
    /// implementer for the getElementPicked() method
    PyObject*  getElementPicked(PyObject *args);
    /// callback for the getDetailPath() method
    static PyObject * staticCallback_getDetailPath (PyObject *self, PyObject *args);
    /// implementer for the getDetailPath() method
    PyObject*  getDetailPath(PyObject *args);
    /// callback for the signalChangeIcon() method
    static PyObject * staticCallback_signalChangeIcon (PyObject *self, PyObject *args);
    /// implementer for the signalChangeIcon() method
    PyObject*  signalChangeIcon(PyObject *args);
    /// callback for the getBoundingBox() method
    static PyObject * staticCallback_getBoundingBox (PyObject *self, PyObject *args);
    /// implementer for the getBoundingBox() method
    PyObject*  getBoundingBox(PyObject *args);
    //@}


    /** @name callbacks and implementers for the python object attributes */
    //@{
    ///getter callback for the Annotation attribute
    static PyObject * staticCallback_getAnnotation (PyObject *self, void *closure);
    /// getter for the Annotation attribute
    Py::Object getAnnotation() const;
    /// setter callback for the Annotation attribute
    static int staticCallback_setAnnotation (PyObject *self, PyObject *value, void *closure);
    /// setter for the Annotation attribute
    void setAnnotation(Py::Object arg);
    ///getter callback for the Icon attribute
    static PyObject * staticCallback_getIcon (PyObject *self, void *closure);
    /// getter for the Icon attribute
    Py::Object getIcon() const;
    /// setter callback for the Icon attribute
    static int staticCallback_setIcon (PyObject *self, PyObject *value, void *closure);
    // no setter method,  Icon is read only!
    ///getter callback for the RootNode attribute
    static PyObject * staticCallback_getRootNode (PyObject *self, void *closure);
    /// getter for the RootNode attribute
    Py::Object getRootNode() const;
    /// setter callback for the RootNode attribute
    static int staticCallback_setRootNode (PyObject *self, PyObject *value, void *closure);
    /// setter for the RootNode attribute
    void setRootNode(Py::Object arg);
    ///getter callback for the SwitchNode attribute
    static PyObject * staticCallback_getSwitchNode (PyObject *self, void *closure);
    /// getter for the SwitchNode attribute
    Py::Object getSwitchNode() const;
    /// setter callback for the SwitchNode attribute
    static int staticCallback_setSwitchNode (PyObject *self, PyObject *value, void *closure);
    /// setter for the SwitchNode attribute
    void setSwitchNode(Py::Object arg);
    ///getter callback for the DefaultMode attribute
    static PyObject * staticCallback_getDefaultMode (PyObject *self, void *closure);
    /// getter for the DefaultMode attribute
    Py::Int getDefaultMode() const;
    /// setter callback for the DefaultMode attribute
    static int staticCallback_setDefaultMode (PyObject *self, PyObject *value, void *closure);
    /// setter for the DefaultMode attribute
    void setDefaultMode(Py::Int arg);
    ///getter callback for the IV attribute
    static PyObject * staticCallback_getIV (PyObject *self, void *closure);
    /// getter for the IV attribute
    Py::String getIV() const;
    /// setter callback for the IV attribute
    static int staticCallback_setIV (PyObject *self, PyObject *value, void *closure);
    // no setter method,  IV is read only!
    ///getter callback for the CanRemoveChildrenFromRoot attribute
    static PyObject * staticCallback_getCanRemoveChildrenFromRoot (PyObject *self, void *closure);
    /// getter for the CanRemoveChildrenFromRoot attribute
    Py::Boolean getCanRemoveChildrenFromRoot() const;
    /// setter callback for the CanRemoveChildrenFromRoot attribute
    static int staticCallback_setCanRemoveChildrenFromRoot (PyObject *self, PyObject *value, void *closure);
    // no setter method,  CanRemoveChildrenFromRoot is read only!
    ///getter callback for the LinkVisibility attribute
    static PyObject * staticCallback_getLinkVisibility (PyObject *self, void *closure);
    /// getter for the LinkVisibility attribute
    Py::Boolean getLinkVisibility() const;
    /// setter callback for the LinkVisibility attribute
    static int staticCallback_setLinkVisibility (PyObject *self, PyObject *value, void *closure);
    /// setter for the LinkVisibility attribute
    void setLinkVisibility(Py::Boolean arg);
    ///getter callback for the DropPrefix attribute
    static PyObject * staticCallback_getDropPrefix (PyObject *self, void *closure);
    /// getter for the DropPrefix attribute
    Py::String getDropPrefix() const;
    /// setter callback for the DropPrefix attribute
    static int staticCallback_setDropPrefix (PyObject *self, PyObject *value, void *closure);
    // no setter method,  DropPrefix is read only!
    //@}

    /// getter method for special attributes (e.g. dynamic ones)
    PyObject *getCustomAttributes(const char* attr) const;
    /// setter for special attributes (e.g. dynamic ones)
    /// Output: Success=1, Failure=-1, Ignore=0
    int setCustomAttributes(const char* attr, PyObject *obj);
    PyObject *_getattr(const char *attr) override;              // __getattr__ function
    int _setattr(const char *attr, PyObject *value) override;   // __setattr__ function

    /// getter for the object handled by this class
    ViewProvider *getViewProviderPtr() const;

};

}  //namespace Gui

#endif  // GUI_VIEWPROVIDERPY_H


