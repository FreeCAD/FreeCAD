
// This file is generated by src/Tools/generateTemplates/templateClassPyExport.py out of the XML file
// Every change you make here gets lost in the next full rebuild!
#ifndef GUI_VIEWPROVIDERLINKPY_H
#define GUI_VIEWPROVIDERLINKPY_H

#include <Gui/ViewProviderDocumentObjectPy.h>
#include <Gui/ViewProviderLink.h>
#include <string>


namespace Gui
{

//===========================================================================
// ViewProviderLinkPy - Python wrapper
//===========================================================================

/** The python export class for ViewProviderLink
 */
class GuiExport ViewProviderLinkPy : public Gui::ViewProviderDocumentObjectPy
{
protected:
    ~ViewProviderLinkPy() override;

public:
    static PyTypeObject   Type;
    static PyMethodDef    Methods[];
    static PyGetSetDef    GetterSetter[];
    PyTypeObject *GetType() override {return &Type;}

public:
    ViewProviderLinkPy(ViewProviderLink *pcObject, PyTypeObject *T = &Type);
    static PyObject *PyMake(PyTypeObject *, PyObject *, PyObject *);
    int PyInit(PyObject* args, PyObject*k) override;


    using PointerType = ViewProviderLink*;

    PyObject *_repr() override;        // the representation
    std::string representation() const;

    /** @name callbacks and implementers for the python object methods */
    //@{
    //@}


    /** @name callbacks and implementers for the python object attributes */
    //@{
    ///getter callback for the DraggingPlacement attribute
    static PyObject * staticCallback_getDraggingPlacement (PyObject *self, void *closure);
    /// getter for the DraggingPlacement attribute
    Py::Object getDraggingPlacement() const;
    /// setter callback for the DraggingPlacement attribute
    static int staticCallback_setDraggingPlacement (PyObject *self, PyObject *value, void *closure);
    /// setter for the DraggingPlacement attribute
    void setDraggingPlacement(Py::Object arg);
    ///getter callback for the UseCenterballDragger attribute
    static PyObject * staticCallback_getUseCenterballDragger (PyObject *self, void *closure);
    /// getter for the UseCenterballDragger attribute
    Py::Boolean getUseCenterballDragger() const;
    /// setter callback for the UseCenterballDragger attribute
    static int staticCallback_setUseCenterballDragger (PyObject *self, PyObject *value, void *closure);
    /// setter for the UseCenterballDragger attribute
    void setUseCenterballDragger(Py::Boolean arg);
    ///getter callback for the LinkView attribute
    static PyObject * staticCallback_getLinkView (PyObject *self, void *closure);
    /// getter for the LinkView attribute
    Py::Object getLinkView() const;
    /// setter callback for the LinkView attribute
    static int staticCallback_setLinkView (PyObject *self, PyObject *value, void *closure);
    // no setter method,  LinkView is read only!
    //@}

    /// getter method for special attributes (e.g. dynamic ones)
    PyObject *getCustomAttributes(const char* attr) const;
    /// setter for special attributes (e.g. dynamic ones)
    /// Output: Success=1, Failure=-1, Ignore=0
    int setCustomAttributes(const char* attr, PyObject *obj);
    PyObject *_getattr(const char *attr) override;              // __getattr__ function
    int _setattr(const char *attr, PyObject *value) override;   // __setattr__ function

    /// getter for the object handled by this class
    ViewProviderLink *getViewProviderLinkPtr() const;

};

}  //namespace Gui

#endif  // GUI_VIEWPROVIDERLINKPY_H


