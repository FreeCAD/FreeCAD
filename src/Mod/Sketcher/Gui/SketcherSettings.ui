<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>SketcherGui::SketcherSettings</class>
 <widget class="QWidget" name="SketcherGui::SketcherSettings">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>500</width>
    <height>592</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>General</string>
  </property>
  <layout class="QGridLayout" name="gridLayout">
   <item row="0" column="0">
    <widget class="QGroupBox" name="groupBox_2">
     <property name="title">
      <string>Task Panel Widgets</string>
     </property>
     <layout class="QGridLayout" name="gridLayout_4">
      <item row="0" column="0">
       <widget class="Gui::PrefCheckBox" name="checkBoxAdvancedSolverTaskBox">
        <property name="toolTip">
         <string>Displays the additional section 'Advanced solver control' to adjust solver settings in the task view</string>
        </property>
        <property name="text">
         <string>Show section 'Advanced solver control'</string>
        </property>
        <property name="prefEntry" stdset="0">
         <cstring>ShowSolverAdvancedWidget</cstring>
        </property>
        <property name="prefPath" stdset="0">
         <cstring>Mod/Sketcher</cstring>
        </property>
       </widget>
      </item>
     </layout>
    </widget>
   </item>
   <item row="1" column="0">
    <widget class="QGroupBox" name="groupBox_4">
     <property name="title">
      <string>Dragging Performance</string>
     </property>
     <layout class="QGridLayout" name="gridLayout_5" rowstretch="0,0" columnstretch="0,0">
      <item row="1" column="0" colspan="2">
       <widget class="Gui::PrefCheckBox" name="checkBoxRecalculateInitialSolutionWhileDragging">
        <property name="toolTip">
         <string>Special solver algorithm will be used while dragging sketch elements.
Requires to re-enter edit mode to take effect.</string>
        </property>
        <property name="text">
         <string>Improve solving while dragging</string>
        </property>
        <property name="checked">
         <bool>true</bool>
        </property>
        <property name="prefEntry" stdset="0">
         <cstring>RecalculateInitialSolutionWhileDragging</cstring>
        </property>
        <property name="prefPath" stdset="0">
         <cstring>Mod/Sketcher</cstring>
        </property>
       </widget>
      </item>
     </layout>
    </widget>
   </item>
   <item row="2" column="0">
    <widget class="QGroupBox" name="groupBox_5">
     <property name="enabled">
      <bool>true</bool>
     </property>
     <property name="sizePolicy">
      <sizepolicy hsizetype="Expanding" vsizetype="Minimum">
       <horstretch>0</horstretch>
       <verstretch>0</verstretch>
      </sizepolicy>
     </property>
     <property name="minimumSize">
      <size>
       <width>0</width>
       <height>0</height>
      </size>
     </property>
     <property name="maximumSize">
      <size>
       <width>16777215</width>
       <height>16777215</height>
      </size>
     </property>
     <property name="baseSize">
      <size>
       <width>0</width>
       <height>0</height>
      </size>
     </property>
     <property name="title">
      <string>General</string>
     </property>
     <layout class="QVBoxLayout" name="verticalLayout_22">
      <item>
       <widget class="Gui::PrefCheckBox" name="checkBoxAutoRemoveRedundants">
        <property name="toolTip">
         <string>Automatically removes newly added redundant constraints</string>
        </property>
        <property name="text">
         <string>Auto remove redundant constraints</string>
        </property>
        <property name="checked">
         <bool>false</bool>
        </property>
        <property name="prefEntry" stdset="0">
         <cstring>AutoRemoveRedundants</cstring>
        </property>
        <property name="prefPath" stdset="0">
         <cstring>Mod/Sketcher</cstring>
        </property>
       </widget>
      </item>
      <item>
       <widget class="Gui::PrefCheckBox" name="checkBoxEnableEscape">
        <property name="toolTip">
         <string>Allows to leave the sketch edit mode by pressing the Esc key</string>
        </property>
        <property name="text">
         <string>Esc can leave sketch edit mode</string>
        </property>
        <property name="checked">
         <bool>true</bool>
        </property>
        <property name="prefEntry" stdset="0">
         <cstring>LeaveSketchWithEscape</cstring>
        </property>
        <property name="prefPath" stdset="0">
         <cstring>Mod/Sketcher</cstring>
        </property>
       </widget>
      </item>
      <item>
       <widget class="Gui::PrefCheckBox" name="checkBoxNotifyConstraintSubstitutions">
        <property name="toolTip">
         <string>Notifies about automatic constraint substitutions</string>
        </property>
        <property name="text">
         <string>Notify automatic constraint substitutions</string>
        </property>
        <property name="checked">
         <bool>true</bool>
        </property>
        <property name="prefEntry" stdset="0">
         <cstring>NotifyConstraintSubstitutions</cstring>
        </property>
        <property name="prefPath" stdset="0">
         <cstring>Mod/Sketcher/General</cstring>
        </property>
       </widget>
      </item>
      <item>
       <widget class="Gui::PrefCheckBox" name="checkBoxUnifiedCoincident">
        <property name="toolTip">
         <string>Unifies the coincident and point-on-object constraints in a single tool</string>
        </property>
        <property name="text">
         <string>Unify coincident and point-on-object constraints</string>
        </property>
        <property name="checked">
         <bool>true</bool>
        </property>
        <property name="prefEntry" stdset="0">
         <cstring>UnifiedCoincident</cstring>
        </property>
        <property name="prefPath" stdset="0">
         <cstring>Mod/Sketcher/Constraints</cstring>
        </property>
       </widget>
      </item>
      <item>
       <widget class="Gui::PrefCheckBox" name="checkBoxHorVerAuto">
        <property name="toolTip">
         <string>Unifies the horizontal and vertical constraints to an automatic command</string>
        </property>
        <property name="text">
         <string>Auto tool for horizontal/vertical constraints</string>
        </property>
        <property name="checked">
         <bool>true</bool>
        </property>
        <property name="prefEntry" stdset="0">
         <cstring>AutoHorVer</cstring>
        </property>
        <property name="prefPath" stdset="0">
         <cstring>Mod/Sketcher/Constraints</cstring>
        </property>
       </widget>
      </item>
      <item>
       <widget class="Gui::PrefCheckBox" name="checkBoxLineGroup">
        <property name="toolTip">
         <string>Shows a command group button that contains both the polyline and line commands. Otherwise, each command has its own separate button.</string>
        </property>
        <property name="text">
         <string>Group the polyline and line commands</string>
        </property>
        <property name="checked">
         <bool>false</bool>
        </property>
        <property name="prefEntry" stdset="0">
         <cstring>UnifiedLineCommands</cstring>
        </property>
        <property name="prefPath" stdset="0">
         <cstring>Mod/Sketcher/Commands</cstring>
        </property>
       </widget>
      </item>
      <item>
       <widget class="Gui::PrefCheckBox" name="checkBoxAddExtGeo">
        <property name="toolTip">
         <string>Always adds external geometry as construction geometry. Otherwise, it is added according to the current construction mode.</string>
        </property>
        <property name="text">
         <string>Always add external geometry as reference</string>
        </property>
        <property name="checked">
         <bool>false</bool>
        </property>
        <property name="prefEntry" stdset="0">
         <cstring>AlwaysExtGeoReference</cstring>
        </property>
        <property name="prefPath" stdset="0">
         <cstring>Mod/Sketcher/General</cstring>
        </property>
       </widget>
      </item>
     </layout>
    </widget>
   </item>
   <item row="3" column="0">
    <widget class="QGroupBox" name="groupBox_6">
     <property name="sizePolicy">
      <sizepolicy hsizetype="Expanding" vsizetype="Minimum">
       <horstretch>0</horstretch>
       <verstretch>0</verstretch>
      </sizepolicy>
     </property>
     <property name="title">
      <string>Dimension Constraint</string>
     </property>
     <layout class="QGridLayout" name="gridLayout_general">
      <item row="1" column="1">
       <widget class="QComboBox" name="radiusDiameterMode">
        <property name="toolTip">
         <string>While using the Dimension tool you may choose how to handle circles and arcs:
'Auto': The tool will apply radius to arcs and diameter to circles.
'Diameter': The tool will apply diameter to both arcs and circles.
'Radius': The tool will apply radius to both arcs and circles.</string>
        </property>
       </widget>
      </item>
      <item row="0" column="1">
       <widget class="QComboBox" name="dimensioningMode">
        <property name="toolTip">
         <string>Select the type of dimensioning constraints for your toolbar:
'Single tool': A single tool for all dimensioning constraints in the toolbar: Distance, Distance X / Y, Angle, Radius. (Others in dropdown)
'Separated tools': Individual tools for each dimensioning constraint.
'Both': You will have both the 'Dimension' tool and the separated tools.
This setting is only for the toolbar. Whichever you choose, all tools are always available in the menu and through shortcuts.</string>
        </property>
       </widget>
      </item>
      <item row="1" column="0">
       <widget class="QLabel" name="radiusDiameterLabel">
        <property name="text">
         <string>Dimension tool diameter/radius mode</string>
        </property>
       </widget>
      </item>
      <item row="0" column="0">
       <widget class="QLabel" name="dimensioningLabel">
        <property name="text">
         <string>Dimensioning constraints</string>
        </property>
       </widget>
      </item>
      <item row="2" column="0">
       <widget class="QLabel" name="autoScaleModeLabel">
        <property name="text">
         <string>Scale upon first constraint</string>
        </property>
       </widget>
      </item>
      <item row="2" column="1">
       <widget class="QComboBox" name="autoScaleMode">
        <property name="toolTip">
         <string>Select the mode of automatic geometry scaling upon first dimension:
'Always': Automatic scaling upon first dimension is always performed.
'Never': Automatic scaling upon first dimension is never performed.
'When no scale feature is visible': Automatic scaling upon first dimension is only performed if there are no visible objects in the 3D view.</string>
        </property>
       </widget>
      </item>
     </layout>
    </widget>
   </item>
   <item row="4" column="0">
    <widget class="QGroupBox" name="groupBox_7">
     <property name="sizePolicy">
      <sizepolicy hsizetype="Expanding" vsizetype="Minimum">
       <horstretch>0</horstretch>
       <verstretch>0</verstretch>
      </sizepolicy>
     </property>
     <property name="title">
      <string>Tool Parameters</string>
     </property>
     <layout class="QGridLayout" name="gridLayout_vis">
      <item row="0" column="0">
       <widget class="QLabel" name="ovpVisibilityLabel">
        <property name="text">
         <string>On-view-parameters (OVP)</string>
        </property>
       </widget>
      </item>
      <item row="0" column="1">
       <widget class="QComboBox" name="ovpVisibility">
        <property name="toolTip">
         <string>Choose a visibility mode for the On-View-Parameters:
'Disabled': On-View-Parameters are completely disabled.
'Only dimensional': Only dimensional On-View-Parameters are visible. They are the most useful. For example the radius of a circle.
'All': Both dimensional and positional On-View-Parameters. Positionals are the (x,y) position of the cursor. For example for the center of a circle.</string>
        </property>
       </widget>
      </item>
     </layout>
    </widget>
   </item>
   <item row="5" column="0">
    <spacer name="verticalSpacer">
     <property name="orientation">
      <enum>Qt::Vertical</enum>
     </property>
     <property name="sizeHint" stdset="0">
      <size>
       <width>20</width>
       <height>40</height>
      </size>
     </property>
    </spacer>
   </item>
  </layout>
 </widget>
 <customwidgets>
  <customwidget>
   <class>Gui::PrefCheckBox</class>
   <extends>QCheckBox</extends>
   <header>Gui/PrefWidgets.h</header>
  </customwidget>
 </customwidgets>
 <tabstops>
  <tabstop>checkBoxAdvancedSolverTaskBox</tabstop>
  <tabstop>checkBoxRecalculateInitialSolutionWhileDragging</tabstop>
  <tabstop>checkBoxAutoRemoveRedundants</tabstop>
  <tabstop>checkBoxEnableEscape</tabstop>
  <tabstop>checkBoxNotifyConstraintSubstitutions</tabstop>
 </tabstops>
 <resources/>
 <connections/>
</ui>
