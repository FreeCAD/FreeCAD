<?xml version="1.0" encoding="UTF-8"?>
<GenerateModel xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="generateMetaModel_Module.xsd">
  <PythonExport
      Father="BaseClassPy"
      Name="ExternalGeometryFacadePy"
      PythonName="Sketcher.ExternalGeometryFacade"
      Twin="ExternalGeometryFacade"
      TwinPointer="ExternalGeometryFacade"
      Include="Mod/Sketcher/App/ExternalGeometryFacade.h"
      Namespace="Sketcher"
      FatherInclude="Base/BaseClassPy.h"
      FatherNamespace="Base"
      Constructor="true">
    <Documentation>
      <Author Licence="LGPL" Name="Abdullah Tahiri" EMail="abdullah.tahiri.yo@gmail.com" />
      <UserDocu>Describes a GeometryFacade</UserDocu>
    </Documentation>
    <Methode Name="testFlag" Const="true">
        <Documentation>
            <UserDocu>Returns a boolean indicating whether the given bit is set.</UserDocu>
        </Documentation>
    </Methode>
    <Methode Name="setFlag" Const="false">
        <Documentation>
            <UserDocu>Sets the given bit to true/false.</UserDocu>
        </Documentation>
    </Methode>
    <Attribute Name="Ref" ReadOnly="false">
        <Documentation>
            <UserDocu>
                Returns the reference string of this external geometry.
            </UserDocu>
        </Documentation>
        <Parameter Name="Ref" Type="String"/>
    </Attribute>
   <Attribute Name="Id" ReadOnly="false">
        <Documentation>
            <UserDocu>
                Sets/returns the Internal Alignment Type of the Geometry.
            </UserDocu>
        </Documentation>
        <Parameter Name="Id" Type="Long"/>
    </Attribute>
    <Attribute Name="Construction" ReadOnly="false">
      <Documentation>
        <UserDocu>Sets/returns this geometry as a construction one, which will not be part of a later built shape.</UserDocu>
      </Documentation>
      <Parameter Name="Construction" Type="Boolean"/>
      </Attribute>
    <Attribute Name="GeometryLayerId" ReadOnly="false">
        <Documentation>
            <UserDocu>
                Returns the Id of the geometry Layer in which the geometry is located.
            </UserDocu>
        </Documentation>
        <Parameter Name="GeometryLayerId" Type="Long"/>
    </Attribute>
    <Attribute Name="InternalType" ReadOnly="false">
        <Documentation>
            <UserDocu>
                Sets/returns the Internal Alignment Type of the Geometry.
            </UserDocu>
        </Documentation>
        <Parameter Name="InternalType" Type="String"/>
    </Attribute>
    <Attribute Name="Blocked" ReadOnly="false">
        <Documentation>
            <UserDocu>
                Sets/returns whether the geometry is blocked or not.
            </UserDocu>
        </Documentation>
        <Parameter Name="Blocked" Type="Boolean"/>
    </Attribute>
    <Methode Name="mirror">
      <Documentation>
        <UserDocu>Performs the symmetrical transformation of this geometric object</UserDocu>
      </Documentation>
    </Methode>
    <Methode Name="rotate">
      <Documentation>
        <UserDocu>Rotates this geometric object at angle Ang (in radians) about axis</UserDocu>
      </Documentation>
    </Methode>
    <Methode Name="scale">
      <Documentation>
        <UserDocu>Applies a scaling transformation on this geometric object with a center and scaling factor</UserDocu>
      </Documentation>
    </Methode>
    <Methode Name="transform">
      <Documentation>
        <UserDocu>Applies a transformation to this geometric object</UserDocu>
      </Documentation>
    </Methode>
    <Methode Name="translate">
      <Documentation>
        <UserDocu>Translates this geometric object</UserDocu>
      </Documentation>
    </Methode>
    <Methode Name="hasExtensionOfType" Const="true">
        <Documentation>
            <UserDocu>Returns a boolean indicating whether a geometry extension of the type indicated as a string exists.</UserDocu>
        </Documentation>
    </Methode>
    <Methode Name="hasExtensionOfName" Const="true">
        <Documentation>
            <UserDocu>Returns a boolean indicating whether a geometry extension with the name indicated as a string exists.</UserDocu>
        </Documentation>
    </Methode>
    <Methode Name="getExtensionOfType" Const="true">
        <Documentation>
            <UserDocu>Gets the first geometry extension of the type indicated by the string.</UserDocu>
        </Documentation>
    </Methode>
    <Methode Name="getExtensionOfName" Const="true">
        <Documentation>
            <UserDocu>Gets the first geometry extension of the name indicated by the string.</UserDocu>
        </Documentation>
    </Methode>
    <Methode Name="setExtension" Const="false">
        <Documentation>
            <UserDocu>Sets a geometry extension of the indicated type.</UserDocu>
        </Documentation>
    </Methode>
    <Methode Name="deleteExtensionOfType" Const="false">
        <Documentation>
            <UserDocu>Deletes all extensions of the indicated type.</UserDocu>
        </Documentation>
    </Methode>
    <Methode Name="deleteExtensionOfName" Const="false">
        <Documentation>
            <UserDocu>Deletes all extensions of the indicated name.</UserDocu>
        </Documentation>
    </Methode>
    <Methode Name="getExtensions" Const="true">
        <Documentation>
            <UserDocu>Returns a list with information about the geometry extensions.</UserDocu>
        </Documentation>
    </Methode>
    <Attribute Name="Tag" ReadOnly="true">
      <Documentation>
        <UserDocu>Gives the tag of the geometry as string.</UserDocu>
      </Documentation>
      <Parameter Name="Tag" Type="String"/>
    </Attribute>
    <Attribute Name="Geometry" ReadOnly="false">
      <Documentation>
        <UserDocu>Returns the underlying geometry object.</UserDocu>
      </Documentation>
      <Parameter Name="Geometry" Type="Object"/>
    </Attribute>
  </PythonExport>
</GenerateModel>
