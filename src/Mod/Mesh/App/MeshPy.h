
// This file is generated by src/Tools/generateTemaplates/templateClassPyExport.py out of the XML file
// Every change you make here get lost at the next full rebuild!
#ifndef MESH_MESHPY_H
#define MESH_MESHPY_H

#include <App/ComplexGeoDataPy.h>
#include <Mod/Mesh/App/Mesh.h>
#include <string>

namespace Mesh
{

//===========================================================================
// MeshPy - Python wrapper
//===========================================================================

/** The python export class for MeshObject
 */
class MeshExport MeshPy : public Data::ComplexGeoDataPy
{
public:
    static PyTypeObject   Type;
    static PyMethodDef    Methods[];
    static PyGetSetDef    GetterSetter[];
    virtual PyTypeObject *GetType(void) {return &Type;};

public:
    MeshPy(MeshObject *pcObject, PyTypeObject *T = &Type);
    static PyObject *PyMake(struct _typeobject *, PyObject *, PyObject *);
    virtual int PyInit(PyObject* args, PyObject*k);
    ~MeshPy();

    typedef MeshObject* PointerType ;

    virtual PyObject *_repr(void);        // the representation
    std::string representation(void) const;

    /** @name callbacks and implementers for the python object methods */
    //@{
    /// callback for the read() method
    static PyObject * staticCallback_read (PyObject *self, PyObject *args);
    /// implementer for the read() method
    PyObject*  read(PyObject *args);
    /// callback for the write() method
    static PyObject * staticCallback_write (PyObject *self, PyObject *args);
    /// implementer for the write() method
    PyObject*  write(PyObject *args);
    /// callback for the writeInventor() method
    static PyObject * staticCallback_writeInventor (PyObject *self, PyObject *args);
    /// implementer for the writeInventor() method
    PyObject*  writeInventor(PyObject *args);
    /// callback for the copy() method
    static PyObject * staticCallback_copy (PyObject *self, PyObject *args);
    /// implementer for the copy() method
    PyObject*  copy(PyObject *args);
    /// callback for the offset() method
    static PyObject * staticCallback_offset (PyObject *self, PyObject *args);
    /// implementer for the offset() method
    PyObject*  offset(PyObject *args);
    /// callback for the offsetSpecial() method
    static PyObject * staticCallback_offsetSpecial (PyObject *self, PyObject *args);
    /// implementer for the offsetSpecial() method
    PyObject*  offsetSpecial(PyObject *args);
    /// callback for the crossSections() method
    static PyObject * staticCallback_crossSections (PyObject *self, PyObject *args);
    /// implementer for the crossSections() method
    PyObject*  crossSections(PyObject *args);
    /// callback for the unite() method
    static PyObject * staticCallback_unite (PyObject *self, PyObject *args);
    /// implementer for the unite() method
    PyObject*  unite(PyObject *args);
    /// callback for the intersect() method
    static PyObject * staticCallback_intersect (PyObject *self, PyObject *args);
    /// implementer for the intersect() method
    PyObject*  intersect(PyObject *args);
    /// callback for the difference() method
    static PyObject * staticCallback_difference (PyObject *self, PyObject *args);
    /// implementer for the difference() method
    PyObject*  difference(PyObject *args);
    /// callback for the inner() method
    static PyObject * staticCallback_inner (PyObject *self, PyObject *args);
    /// implementer for the inner() method
    PyObject*  inner(PyObject *args);
    /// callback for the outer() method
    static PyObject * staticCallback_outer (PyObject *self, PyObject *args);
    /// implementer for the outer() method
    PyObject*  outer(PyObject *args);
    /// callback for the coarsen() method
    static PyObject * staticCallback_coarsen (PyObject *self, PyObject *args);
    /// implementer for the coarsen() method
    PyObject*  coarsen(PyObject *args);
    /// callback for the translate() method
    static PyObject * staticCallback_translate (PyObject *self, PyObject *args);
    /// implementer for the translate() method
    PyObject*  translate(PyObject *args);
    /// callback for the rotate() method
    static PyObject * staticCallback_rotate (PyObject *self, PyObject *args);
    /// implementer for the rotate() method
    PyObject*  rotate(PyObject *args);
    /// callback for the transform() method
    static PyObject * staticCallback_transform (PyObject *self, PyObject *args);
    /// implementer for the transform() method
    PyObject*  transform(PyObject *args);
    /// callback for the transformToEigen() method
    static PyObject * staticCallback_transformToEigen (PyObject *self, PyObject *args);
    /// implementer for the transformToEigen() method
    PyObject*  transformToEigen(PyObject *args);
    /// callback for the getEigenSystem() method
    static PyObject * staticCallback_getEigenSystem (PyObject *self, PyObject *args);
    /// implementer for the getEigenSystem() method
    PyObject*  getEigenSystem(PyObject *args);
    /// callback for the addFacet() method
    static PyObject * staticCallback_addFacet (PyObject *self, PyObject *args);
    /// implementer for the addFacet() method
    PyObject*  addFacet(PyObject *args);
    /// callback for the addFacets() method
    static PyObject * staticCallback_addFacets (PyObject *self, PyObject *args);
    /// implementer for the addFacets() method
    PyObject*  addFacets(PyObject *args);
    /// callback for the removeFacets() method
    static PyObject * staticCallback_removeFacets (PyObject *self, PyObject *args);
    /// implementer for the removeFacets() method
    PyObject*  removeFacets(PyObject *args);
    /// callback for the getInternalFacets() method
    static PyObject * staticCallback_getInternalFacets (PyObject *self, PyObject *args);
    /// implementer for the getInternalFacets() method
    PyObject*  getInternalFacets(PyObject *args);
    /// callback for the rebuildNeighbourHood() method
    static PyObject * staticCallback_rebuildNeighbourHood (PyObject *self, PyObject *args);
    /// implementer for the rebuildNeighbourHood() method
    PyObject*  rebuildNeighbourHood(PyObject *args);
    /// callback for the addMesh() method
    static PyObject * staticCallback_addMesh (PyObject *self, PyObject *args);
    /// implementer for the addMesh() method
    PyObject*  addMesh(PyObject *args);
    /// callback for the setPoint() method
    static PyObject * staticCallback_setPoint (PyObject *self, PyObject *args);
    /// implementer for the setPoint() method
    PyObject*  setPoint(PyObject *args);
    /// callback for the getPointNormals() method
    static PyObject * staticCallback_getPointNormals (PyObject *self, PyObject *args);
    /// implementer for the getPointNormals() method
    PyObject*  getPointNormals(PyObject *args);
    /// callback for the countSegments() method
    static PyObject * staticCallback_countSegments (PyObject *self, PyObject *args);
    /// implementer for the countSegments() method
    PyObject*  countSegments(PyObject *args);
    /// callback for the getSegment() method
    static PyObject * staticCallback_getSegment (PyObject *self, PyObject *args);
    /// implementer for the getSegment() method
    PyObject*  getSegment(PyObject *args);
    /// callback for the getSeparateComponents() method
    static PyObject * staticCallback_getSeparateComponents (PyObject *self, PyObject *args);
    /// implementer for the getSeparateComponents() method
    PyObject*  getSeparateComponents(PyObject *args);
    /// callback for the getFacetSelection() method
    static PyObject * staticCallback_getFacetSelection (PyObject *self, PyObject *args);
    /// implementer for the getFacetSelection() method
    PyObject*  getFacetSelection(PyObject *args);
    /// callback for the getPointSelection() method
    static PyObject * staticCallback_getPointSelection (PyObject *self, PyObject *args);
    /// implementer for the getPointSelection() method
    PyObject*  getPointSelection(PyObject *args);
    /// callback for the meshFromSegment() method
    static PyObject * staticCallback_meshFromSegment (PyObject *self, PyObject *args);
    /// implementer for the meshFromSegment() method
    PyObject*  meshFromSegment(PyObject *args);
    /// callback for the clear() method
    static PyObject * staticCallback_clear (PyObject *self, PyObject *args);
    /// implementer for the clear() method
    PyObject*  clear(PyObject *args);
    /// callback for the isSolid() method
    static PyObject * staticCallback_isSolid (PyObject *self, PyObject *args);
    /// implementer for the isSolid() method
    PyObject*  isSolid(PyObject *args);
    /// callback for the hasNonManifolds() method
    static PyObject * staticCallback_hasNonManifolds (PyObject *self, PyObject *args);
    /// implementer for the hasNonManifolds() method
    PyObject*  hasNonManifolds(PyObject *args);
    /// callback for the removeNonManifolds() method
    static PyObject * staticCallback_removeNonManifolds (PyObject *self, PyObject *args);
    /// implementer for the removeNonManifolds() method
    PyObject*  removeNonManifolds(PyObject *args);
    /// callback for the hasSelfIntersections() method
    static PyObject * staticCallback_hasSelfIntersections (PyObject *self, PyObject *args);
    /// implementer for the hasSelfIntersections() method
    PyObject*  hasSelfIntersections(PyObject *args);
    /// callback for the fixSelfIntersections() method
    static PyObject * staticCallback_fixSelfIntersections (PyObject *self, PyObject *args);
    /// implementer for the fixSelfIntersections() method
    PyObject*  fixSelfIntersections(PyObject *args);
    /// callback for the removeFoldsOnSurface() method
    static PyObject * staticCallback_removeFoldsOnSurface (PyObject *self, PyObject *args);
    /// implementer for the removeFoldsOnSurface() method
    PyObject*  removeFoldsOnSurface(PyObject *args);
    /// callback for the hasNonUniformOrientedFacets() method
    static PyObject * staticCallback_hasNonUniformOrientedFacets (PyObject *self, PyObject *args);
    /// implementer for the hasNonUniformOrientedFacets() method
    PyObject*  hasNonUniformOrientedFacets(PyObject *args);
    /// callback for the countNonUniformOrientedFacets() method
    static PyObject * staticCallback_countNonUniformOrientedFacets (PyObject *self, PyObject *args);
    /// implementer for the countNonUniformOrientedFacets() method
    PyObject*  countNonUniformOrientedFacets(PyObject *args);
    /// callback for the hasInvalidPoints() method
    static PyObject * staticCallback_hasInvalidPoints (PyObject *self, PyObject *args);
    /// implementer for the hasInvalidPoints() method
    PyObject*  hasInvalidPoints(PyObject *args);
    /// callback for the removeInvalidPoints() method
    static PyObject * staticCallback_removeInvalidPoints (PyObject *self, PyObject *args);
    /// implementer for the removeInvalidPoints() method
    PyObject*  removeInvalidPoints(PyObject *args);
    /// callback for the countComponents() method
    static PyObject * staticCallback_countComponents (PyObject *self, PyObject *args);
    /// implementer for the countComponents() method
    PyObject*  countComponents(PyObject *args);
    /// callback for the removeComponents() method
    static PyObject * staticCallback_removeComponents (PyObject *self, PyObject *args);
    /// implementer for the removeComponents() method
    PyObject*  removeComponents(PyObject *args);
    /// callback for the fixIndices() method
    static PyObject * staticCallback_fixIndices (PyObject *self, PyObject *args);
    /// implementer for the fixIndices() method
    PyObject*  fixIndices(PyObject *args);
    /// callback for the fixDeformations() method
    static PyObject * staticCallback_fixDeformations (PyObject *self, PyObject *args);
    /// implementer for the fixDeformations() method
    PyObject*  fixDeformations(PyObject *args);
    /// callback for the fixDegenerations() method
    static PyObject * staticCallback_fixDegenerations (PyObject *self, PyObject *args);
    /// implementer for the fixDegenerations() method
    PyObject*  fixDegenerations(PyObject *args);
    /// callback for the removeDuplicatedPoints() method
    static PyObject * staticCallback_removeDuplicatedPoints (PyObject *self, PyObject *args);
    /// implementer for the removeDuplicatedPoints() method
    PyObject*  removeDuplicatedPoints(PyObject *args);
    /// callback for the removeDuplicatedFacets() method
    static PyObject * staticCallback_removeDuplicatedFacets (PyObject *self, PyObject *args);
    /// implementer for the removeDuplicatedFacets() method
    PyObject*  removeDuplicatedFacets(PyObject *args);
    /// callback for the refine() method
    static PyObject * staticCallback_refine (PyObject *self, PyObject *args);
    /// implementer for the refine() method
    PyObject*  refine(PyObject *args);
    /// callback for the splitEdges() method
    static PyObject * staticCallback_splitEdges (PyObject *self, PyObject *args);
    /// implementer for the splitEdges() method
    PyObject*  splitEdges(PyObject *args);
    /// callback for the splitEdge() method
    static PyObject * staticCallback_splitEdge (PyObject *self, PyObject *args);
    /// implementer for the splitEdge() method
    PyObject*  splitEdge(PyObject *args);
    /// callback for the splitFacet() method
    static PyObject * staticCallback_splitFacet (PyObject *self, PyObject *args);
    /// implementer for the splitFacet() method
    PyObject*  splitFacet(PyObject *args);
    /// callback for the swapEdge() method
    static PyObject * staticCallback_swapEdge (PyObject *self, PyObject *args);
    /// implementer for the swapEdge() method
    PyObject*  swapEdge(PyObject *args);
    /// callback for the collapseEdge() method
    static PyObject * staticCallback_collapseEdge (PyObject *self, PyObject *args);
    /// implementer for the collapseEdge() method
    PyObject*  collapseEdge(PyObject *args);
    /// callback for the collapseFacet() method
    static PyObject * staticCallback_collapseFacet (PyObject *self, PyObject *args);
    /// implementer for the collapseFacet() method
    PyObject*  collapseFacet(PyObject *args);
    /// callback for the collapseFacets() method
    static PyObject * staticCallback_collapseFacets (PyObject *self, PyObject *args);
    /// implementer for the collapseFacets() method
    PyObject*  collapseFacets(PyObject *args);
    /// callback for the insertVertex() method
    static PyObject * staticCallback_insertVertex (PyObject *self, PyObject *args);
    /// implementer for the insertVertex() method
    PyObject*  insertVertex(PyObject *args);
    /// callback for the snapVertex() method
    static PyObject * staticCallback_snapVertex (PyObject *self, PyObject *args);
    /// implementer for the snapVertex() method
    PyObject*  snapVertex(PyObject *args);
    /// callback for the printInfo() method
    static PyObject * staticCallback_printInfo (PyObject *self, PyObject *args);
    /// implementer for the printInfo() method
    PyObject*  printInfo(PyObject *args);
    /// callback for the foraminate() method
    static PyObject * staticCallback_foraminate (PyObject *self, PyObject *args);
    /// implementer for the foraminate() method
    PyObject*  foraminate(PyObject *args);
    /// callback for the cut() method
    static PyObject * staticCallback_cut (PyObject *self, PyObject *args);
    /// implementer for the cut() method
    PyObject*  cut(PyObject *args);
    /// callback for the trim() method
    static PyObject * staticCallback_trim (PyObject *self, PyObject *args);
    /// implementer for the trim() method
    PyObject*  trim(PyObject *args);
    /// callback for the harmonizeNormals() method
    static PyObject * staticCallback_harmonizeNormals (PyObject *self, PyObject *args);
    /// implementer for the harmonizeNormals() method
    PyObject*  harmonizeNormals(PyObject *args);
    /// callback for the flipNormals() method
    static PyObject * staticCallback_flipNormals (PyObject *self, PyObject *args);
    /// implementer for the flipNormals() method
    PyObject*  flipNormals(PyObject *args);
    /// callback for the fillupHoles() method
    static PyObject * staticCallback_fillupHoles (PyObject *self, PyObject *args);
    /// implementer for the fillupHoles() method
    PyObject*  fillupHoles(PyObject *args);
    /// callback for the smooth() method
    static PyObject * staticCallback_smooth (PyObject *self, PyObject *args);
    /// implementer for the smooth() method
    PyObject*  smooth(PyObject *args);
    /// callback for the optimizeTopology() method
    static PyObject * staticCallback_optimizeTopology (PyObject *self, PyObject *args);
    /// implementer for the optimizeTopology() method
    PyObject*  optimizeTopology(PyObject *args);
    /// callback for the optimizeEdges() method
    static PyObject * staticCallback_optimizeEdges (PyObject *self, PyObject *args);
    /// implementer for the optimizeEdges() method
    PyObject*  optimizeEdges(PyObject *args);
    /// callback for the nearestFacetOnRay() method
    static PyObject * staticCallback_nearestFacetOnRay (PyObject *self, PyObject *args);
    /// implementer for the nearestFacetOnRay() method
    PyObject*  nearestFacetOnRay(PyObject *args);
    /// callback for the getPlanarSegments() method
    static PyObject * staticCallback_getPlanarSegments (PyObject *self, PyObject *args);
    /// implementer for the getPlanarSegments() method
    PyObject*  getPlanarSegments(PyObject *args);
    /// callback for the getSegmentsByCurvature() method
    static PyObject * staticCallback_getSegmentsByCurvature (PyObject *self, PyObject *args);
    /// implementer for the getSegmentsByCurvature() method
    PyObject*  getSegmentsByCurvature(PyObject *args);
    //@}


    /** @name callbacks and implementers for the python object attributes */
    //@{
    ///getter callback for the Points attribute
    static PyObject * staticCallback_getPoints (PyObject *self, void *closure);
    /// getter for the Points attribute
    Py::List getPoints(void) const;
    /// setter callback for the Points attribute
    static int staticCallback_setPoints (PyObject *self, PyObject *value, void *closure);
    // no setter method,  Points is read only!
    ///getter callback for the CountPoints attribute
    static PyObject * staticCallback_getCountPoints (PyObject *self, void *closure);
    /// getter for the CountPoints attribute
    Py::Int getCountPoints(void) const;
    /// setter callback for the CountPoints attribute
    static int staticCallback_setCountPoints (PyObject *self, PyObject *value, void *closure);
    // no setter method,  CountPoints is read only!
    ///getter callback for the CountEdges attribute
    static PyObject * staticCallback_getCountEdges (PyObject *self, void *closure);
    /// getter for the CountEdges attribute
    Py::Int getCountEdges(void) const;
    /// setter callback for the CountEdges attribute
    static int staticCallback_setCountEdges (PyObject *self, PyObject *value, void *closure);
    // no setter method,  CountEdges is read only!
    ///getter callback for the Facets attribute
    static PyObject * staticCallback_getFacets (PyObject *self, void *closure);
    /// getter for the Facets attribute
    Py::List getFacets(void) const;
    /// setter callback for the Facets attribute
    static int staticCallback_setFacets (PyObject *self, PyObject *value, void *closure);
    // no setter method,  Facets is read only!
    ///getter callback for the CountFacets attribute
    static PyObject * staticCallback_getCountFacets (PyObject *self, void *closure);
    /// getter for the CountFacets attribute
    Py::Int getCountFacets(void) const;
    /// setter callback for the CountFacets attribute
    static int staticCallback_setCountFacets (PyObject *self, PyObject *value, void *closure);
    // no setter method,  CountFacets is read only!
    ///getter callback for the Topology attribute
    static PyObject * staticCallback_getTopology (PyObject *self, void *closure);
    /// getter for the Topology attribute
    Py::Tuple getTopology(void) const;
    /// setter callback for the Topology attribute
    static int staticCallback_setTopology (PyObject *self, PyObject *value, void *closure);
    // no setter method,  Topology is read only!
    ///getter callback for the Area attribute
    static PyObject * staticCallback_getArea (PyObject *self, void *closure);
    /// getter for the Area attribute
    Py::Float getArea(void) const;
    /// setter callback for the Area attribute
    static int staticCallback_setArea (PyObject *self, PyObject *value, void *closure);
    // no setter method,  Area is read only!
    ///getter callback for the Volume attribute
    static PyObject * staticCallback_getVolume (PyObject *self, void *closure);
    /// getter for the Volume attribute
    Py::Float getVolume(void) const;
    /// setter callback for the Volume attribute
    static int staticCallback_setVolume (PyObject *self, PyObject *value, void *closure);
    // no setter method,  Volume is read only!
    //@}

    /// getter method for special attributes (e.g. dynamic ones)
    PyObject *getCustomAttributes(const char* attr) const;
    /// setter for special attributes (e.g. dynamic ones)
    /// Output: Success=1, Failure=-1, Ignore=0
    int setCustomAttributes(const char* attr, PyObject *obj);
    PyObject *_getattr(char *attr);              // __getattr__ function
    int _setattr(char *attr, PyObject *value);        // __setattr__ function

    /// getter for the object handled by this class
    MeshObject *getMeshObjectPtr(void) const;

    /** @name additional declarations and methods for the wrapper class */
    //@{
private:
    friend class PropertyMeshKernel;
    class PropertyMeshKernel* parentProperty;
		
    //@}
};

}  //namespace Mesh

#endif  // MESH_MESHPY_H


