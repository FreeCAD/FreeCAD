
// This file is generated by src/Tools/generateTemaplates/templateClassPyExport.py out of the XML file
// Every change you make here get lost at the next full rebuild!
#ifndef FEMGUI_VIEWPROVIDERFEMMESHPY_H
#define FEMGUI_VIEWPROVIDERFEMMESHPY_H

#include <Gui/ViewProviderPy.h>
#include <Mod/Fem/Gui/ViewProviderFemMesh.h>
#include <string>

namespace FemGui
{

//===========================================================================
// ViewProviderFemMeshPy - Python wrapper
//===========================================================================

/** The python export class for ViewProviderFemMesh
 */
class FemGuiExport ViewProviderFemMeshPy : public Gui::ViewProviderPy
{
public:
    static PyTypeObject   Type;
    static PyMethodDef    Methods[];
    static PyGetSetDef    GetterSetter[];
    virtual PyTypeObject *GetType(void) {return &Type;};

public:
    ViewProviderFemMeshPy(ViewProviderFemMesh *pcObject, PyTypeObject *T = &Type);
    static PyObject *PyMake(struct _typeobject *, PyObject *, PyObject *);
    virtual int PyInit(PyObject* args, PyObject*k);
    ~ViewProviderFemMeshPy();

    typedef ViewProviderFemMesh* PointerType ;

    virtual PyObject *_repr(void);        // the representation
    std::string representation(void) const;

    /** @name callbacks and implementers for the python object methods */
    //@{
    /// callback for the applyDisplacement() method
    static PyObject * staticCallback_applyDisplacement (PyObject *self, PyObject *args);
    /// implementer for the applyDisplacement() method
    PyObject*  applyDisplacement(PyObject *args);
    /// callback for the setNodeColorByScalars() method
    static PyObject * staticCallback_setNodeColorByScalars (PyObject *self, PyObject *args);
    /// implementer for the setNodeColorByScalars() method
    PyObject*  setNodeColorByScalars(PyObject *args);
    /// callback for the setNodeDisplacementByVectors() method
    static PyObject * staticCallback_setNodeDisplacementByVectors (PyObject *self, PyObject *args);
    /// implementer for the setNodeDisplacementByVectors() method
    PyObject*  setNodeDisplacementByVectors(PyObject *args);
    //@}


    /** @name callbacks and implementers for the python object attributes */
    //@{
    ///getter callback for the NodeColor attribute
    static PyObject * staticCallback_getNodeColor (PyObject *self, void *closure);
    /// getter for the NodeColor attribute
    Py::Dict getNodeColor(void) const;
    /// setter callback for the NodeColor attribute
    static int staticCallback_setNodeColor (PyObject *self, PyObject *value, void *closure);
    /// setter for the NodeColor attribute
    void setNodeColor(Py::Dict arg);
    ///getter callback for the ElementColor attribute
    static PyObject * staticCallback_getElementColor (PyObject *self, void *closure);
    /// getter for the ElementColor attribute
    Py::Dict getElementColor(void) const;
    /// setter callback for the ElementColor attribute
    static int staticCallback_setElementColor (PyObject *self, PyObject *value, void *closure);
    /// setter for the ElementColor attribute
    void setElementColor(Py::Dict arg);
    ///getter callback for the NodeDisplacement attribute
    static PyObject * staticCallback_getNodeDisplacement (PyObject *self, void *closure);
    /// getter for the NodeDisplacement attribute
    Py::Dict getNodeDisplacement(void) const;
    /// setter callback for the NodeDisplacement attribute
    static int staticCallback_setNodeDisplacement (PyObject *self, PyObject *value, void *closure);
    /// setter for the NodeDisplacement attribute
    void setNodeDisplacement(Py::Dict arg);
    ///getter callback for the HighlightedNodes attribute
    static PyObject * staticCallback_getHighlightedNodes (PyObject *self, void *closure);
    /// getter for the HighlightedNodes attribute
    Py::List getHighlightedNodes(void) const;
    /// setter callback for the HighlightedNodes attribute
    static int staticCallback_setHighlightedNodes (PyObject *self, PyObject *value, void *closure);
    /// setter for the HighlightedNodes attribute
    void setHighlightedNodes(Py::List arg);
    ///getter callback for the VisibleElementFaces attribute
    static PyObject * staticCallback_getVisibleElementFaces (PyObject *self, void *closure);
    /// getter for the VisibleElementFaces attribute
    Py::List getVisibleElementFaces(void) const;
    /// setter callback for the VisibleElementFaces attribute
    static int staticCallback_setVisibleElementFaces (PyObject *self, PyObject *value, void *closure);
    // no setter method,  VisibleElementFaces is read only!
    //@}

    /// getter method for special attributes (e.g. dynamic ones)
    PyObject *getCustomAttributes(const char* attr) const;
    /// setter for special attributes (e.g. dynamic ones)
    /// Output: Success=1, Failure=-1, Ignore=0
    int setCustomAttributes(const char* attr, PyObject *obj);
    PyObject *_getattr(char *attr);              // __getattr__ function
    int _setattr(char *attr, PyObject *value);        // __setattr__ function

    /// getter for the object handled by this class
    ViewProviderFemMesh *getViewProviderFemMeshPtr(void) const;

    /** @name additional declarations and methods for the wrapper class */
    //@{

    //@}
};

}  //namespace FemGui

#endif  // FEMGUI_VIEWPROVIDERFEMMESHPY_H


