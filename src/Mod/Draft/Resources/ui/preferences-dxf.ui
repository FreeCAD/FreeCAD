<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>Gui::Dialog::DlgSettingsDraft</class>
 <widget class="QWidget" name="Gui::Dialog::DlgSettingsDraft">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>649</width>
    <height>773</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>DXF</string>
  </property>
  <layout class="QVBoxLayout">
   <property name="spacing">
    <number>6</number>
   </property>
   <property name="leftMargin">
    <number>9</number>
   </property>
   <property name="topMargin">
    <number>9</number>
   </property>
   <property name="rightMargin">
    <number>9</number>
   </property>
   <property name="bottomMargin">
    <number>9</number>
   </property>
   <item>
    <widget class="Gui::PrefCheckBox" name="checkBox_6">
     <property name="toolTip">
      <string>This preferences dialog will be shown when importing/ exporting DXF files</string>
     </property>
     <property name="text">
      <string>Show this dialog when importing and exporting</string>
     </property>
     <property name="prefEntry" stdset="0">
      <cstring>dxfShowDialog</cstring>
     </property>
     <property name="prefPath" stdset="0">
      <cstring>Mod/Draft</cstring>
     </property>
    </widget>
   </item>
   <item>
    <widget class="Gui::PrefCheckBox" name="checkBox_4">
     <property name="toolTip">
      <string>Python importer is used, otherwise the newer C++ is used.
Note: C++ importer is faster, but is not as featureful yet</string>
     </property>
     <property name="text">
      <string>Use legacy python importer</string>
     </property>
     <property name="checked">
      <bool>false</bool>
     </property>
     <property name="prefEntry" stdset="0">
      <cstring>dxfUseLegacyImporter</cstring>
     </property>
     <property name="prefPath" stdset="0">
      <cstring>Mod/Draft</cstring>
     </property>
    </widget>
   </item>
   <item>
    <widget class="Gui::PrefCheckBox" name="checkBox_7">
     <property name="toolTip">
      <string>Python exporter is used, otherwise the newer C++ is used.
Note: C++ exporter is faster, but is not as featureful yet</string>
     </property>
     <property name="text">
      <string>Use legacy python exporter</string>
     </property>
     <property name="prefEntry" stdset="0">
      <cstring>dxfUseLegacyExporter</cstring>
     </property>
     <property name="prefPath" stdset="0">
      <cstring>Mod/Draft</cstring>
     </property>
    </widget>
   </item>
   <item>
    <widget class="QGroupBox" name="groupBox_2">
     <property name="title">
      <string>Automatic update (legacy importer only)</string>
     </property>
     <layout class="QVBoxLayout" name="verticalLayout_2">
      <item>
       <layout class="QHBoxLayout" name="horizontalLayout_9">
        <item>
         <widget class="Gui::PrefCheckBox" name="checkBox_3">
          <property name="toolTip">
           <string>Allow FreeCAD to download the Python converter for DXF import and export.
You can also do this manually by installing the &quot;dxf_library&quot; workbench
from the Addon Manager.</string>
          </property>
          <property name="text">
           <string>Allow FreeCAD to automatically download and update the DXF libraries</string>
          </property>
          <property name="prefEntry" stdset="0">
           <cstring>dxfAllowDownload</cstring>
          </property>
          <property name="prefPath" stdset="0">
           <cstring>Mod/Draft</cstring>
          </property>
         </widget>
        </item>
       </layout>
      </item>
     </layout>
    </widget>
   </item>
   <item>
    <widget class="QGroupBox" name="GroupBox12">
     <property name="title">
      <string>Import options</string>
     </property>
     <layout class="QVBoxLayout">
      <property name="spacing">
       <number>6</number>
      </property>
      <property name="leftMargin">
       <number>9</number>
      </property>
      <property name="topMargin">
       <number>9</number>
      </property>
      <property name="rightMargin">
       <number>9</number>
      </property>
      <property name="bottomMargin">
       <number>9</number>
      </property>
      <item>
       <widget class="QLabel" name="label_2">
        <property name="text">
         <string>Note: Not all the options below are used by the new importer yet</string>
        </property>
       </widget>
      </item>
      <item>
       <layout class="QHBoxLayout" name="horizontalLayout_7">
        <item>
         <widget class="QLabel" name="label_3">
          <property name="text">
           <string>Import</string>
          </property>
         </widget>
        </item>
        <item>
         <widget class="Gui::PrefCheckBox" name="gui::prefcheckbox_2">
          <property name="toolTip">
           <string>If unchecked, texts and mtexts won't be imported</string>
          </property>
          <property name="text">
           <string>texts and dimensions</string>
          </property>
          <property name="prefEntry" stdset="0">
           <cstring>dxftext</cstring>
          </property>
          <property name="prefPath" stdset="0">
           <cstring>Mod/Draft</cstring>
          </property>
         </widget>
        </item>
        <item>
         <widget class="Gui::PrefCheckBox" name="gui::prefcheckbox_13">
          <property name="toolTip">
           <string>If unchecked, points won't be imported</string>
          </property>
          <property name="text">
           <string>points</string>
          </property>
          <property name="prefEntry" stdset="0">
           <cstring>dxfImportPoints</cstring>
          </property>
          <property name="prefPath" stdset="0">
           <cstring>Mod/Draft</cstring>
          </property>
         </widget>
        </item>
        <item>
         <widget class="Gui::PrefCheckBox" name="gui::prefcheckbox_3">
          <property name="toolTip">
           <string>If checked, paper space objects will be imported too</string>
          </property>
          <property name="text">
           <string>layouts</string>
          </property>
          <property name="prefEntry" stdset="0">
           <cstring>dxflayout</cstring>
          </property>
          <property name="prefPath" stdset="0">
           <cstring>Mod/Draft</cstring>
          </property>
         </widget>
        </item>
        <item>
         <widget class="Gui::PrefCheckBox" name="gui::prefcheckbox_7">
          <property name="toolTip">
           <string>If you want the non-named blocks (beginning with a *) to be imported too</string>
          </property>
          <property name="text">
           <string>*blocks</string>
          </property>
          <property name="prefEntry" stdset="0">
           <cstring>dxfstarblocks</cstring>
          </property>
          <property name="prefPath" stdset="0">
           <cstring>Mod/Draft</cstring>
          </property>
         </widget>
        </item>
       </layout>
      </item>
      <item>
       <layout class="QHBoxLayout" name="horizontalLayout_15">
        <item>
         <widget class="QLabel" name="label">
          <property name="text">
           <string>Create</string>
          </property>
         </widget>
        </item>
        <item>
         <widget class="Gui::PrefRadioButton" name="radioButton">
          <property name="toolTip">
           <string>Only standard Part objects will be created (fastest)</string>
          </property>
          <property name="text">
           <string>simple Part shapes</string>
          </property>
          <property name="checked">
           <bool>true</bool>
          </property>
          <property name="prefEntry" stdset="0">
           <cstring>dxfCreatePart</cstring>
          </property>
          <property name="prefPath" stdset="0">
           <cstring>Mod/Draft</cstring>
          </property>
         </widget>
        </item>
        <item>
         <widget class="Gui::PrefRadioButton" name="radioButton_2">
          <property name="toolTip">
           <string>Parametric Draft objects will be created whenever possible</string>
          </property>
          <property name="text">
           <string>Draft objects</string>
          </property>
          <property name="prefEntry" stdset="0">
           <cstring>dxfCreateDraft</cstring>
          </property>
          <property name="prefPath" stdset="0">
           <cstring>Mod/Draft</cstring>
          </property>
         </widget>
        </item>
        <item>
         <widget class="Gui::PrefRadioButton" name="radioButton_3">
          <property name="toolTip">
           <string>Sketches will be created whenever possible</string>
          </property>
          <property name="text">
           <string>Sketches</string>
          </property>
          <property name="prefEntry" stdset="0">
           <cstring>dxfCreateSketch</cstring>
          </property>
          <property name="prefPath" stdset="0">
           <cstring>Mod/Draft</cstring>
          </property>
         </widget>
        </item>
       </layout>
      </item>
      <item>
       <layout class="QHBoxLayout" name="horizontalLayout_6">
        <item>
         <widget class="QLabel" name="label_4">
          <property name="toolTip">
           <string/>
          </property>
          <property name="text">
           <string>Scale factor to apply to imported files</string>
          </property>
         </widget>
        </item>
        <item>
         <spacer name="horizontalSpacer_2">
          <property name="orientation">
           <enum>Qt::Horizontal</enum>
          </property>
          <property name="sizeHint" stdset="0">
           <size>
            <width>40</width>
            <height>20</height>
           </size>
          </property>
         </spacer>
        </item>
        <item>
         <widget class="Gui::PrefDoubleSpinBox" name="doubleSpinBox_2">
          <property name="toolTip">
           <string>Scale factor to apply to DXF files on import.
The factor is the conversion between the unit of your DXF file and millimeters.
Example: for files in millimeters: 1, in centimeters: 10,
                             in meters: 1000, in inches: 25.4, in feet: 304.8</string>
          </property>
          <property name="decimals">
           <number>12</number>
          </property>
          <property name="maximum">
           <double>999999.999998999992386</double>
          </property>
          <property name="value">
           <double>1.000000000000000</double>
          </property>
          <property name="prefEntry" stdset="0">
           <cstring>dxfScaling</cstring>
          </property>
          <property name="prefPath" stdset="0">
           <cstring>Mod/Draft</cstring>
          </property>
         </widget>
        </item>
       </layout>
      </item>
      <item>
       <layout class="QHBoxLayout" name="horizontalLayout">
        <item>
         <widget class="Gui::PrefCheckBox" name="checkBox_2">
          <property name="toolTip">
           <string>Colors will be retrieved from the DXF objects whenever possible.
Otherwise default colors will be applied. </string>
          </property>
          <property name="text">
           <string>Get original colors from the DXF file</string>
          </property>
          <property name="prefEntry" stdset="0">
           <cstring>dxfGetOriginalColors</cstring>
          </property>
          <property name="prefPath" stdset="0">
           <cstring>Mod/Draft</cstring>
          </property>
         </widget>
        </item>
       </layout>
      </item>
      <item>
       <layout class="QHBoxLayout" name="horizontalLayout_5">
        <item>
         <widget class="Gui::PrefCheckBox" name="gui::prefcheckbox_9">
          <property name="toolTip">
           <string>FreeCAD will try to join coincident objects into wires.
Note that this can take a while!</string>
          </property>
          <property name="text">
           <string>Join geometry</string>
          </property>
          <property name="prefEntry" stdset="0">
           <cstring>joingeometry</cstring>
          </property>
          <property name="prefPath" stdset="0">
           <cstring>Mod/Draft</cstring>
          </property>
         </widget>
        </item>
       </layout>
      </item>
      <item>
       <layout class="QHBoxLayout" name="horizontalLayout_8">
        <item>
         <widget class="Gui::PrefCheckBox" name="gui::prefcheckbox_5">
          <property name="toolTip">
           <string>Objects from the same layers will be joined into Draft Blocks,
turning the display faster, but making them less easily editable </string>
          </property>
          <property name="text">
           <string>Group layers into blocks</string>
          </property>
          <property name="prefEntry" stdset="0">
           <cstring>groupLayers</cstring>
          </property>
          <property name="prefPath" stdset="0">
           <cstring>Mod/Draft</cstring>
          </property>
         </widget>
        </item>
       </layout>
      </item>
      <item>
       <layout class="QHBoxLayout" name="horizontalLayout_11">
        <item>
         <widget class="Gui::PrefCheckBox" name="gui::prefcheckbox_8">
          <property name="toolTip">
           <string>Imported texts will get the standard Draft Text size,
instead of the size they have in the DXF document</string>
          </property>
          <property name="text">
           <string>Use standard font size for texts</string>
          </property>
          <property name="prefEntry" stdset="0">
           <cstring>dxfStdSize</cstring>
          </property>
          <property name="prefPath" stdset="0">
           <cstring>Mod/Draft</cstring>
          </property>
         </widget>
        </item>
       </layout>
      </item>
      <item>
       <layout class="QHBoxLayout" name="horizontalLayout_3">
        <item>
         <widget class="Gui::PrefCheckBox" name="checkBox">
          <property name="toolTip">
           <string>If this is checked, DXF layers will be imported as Draft Layers</string>
          </property>
          <property name="text">
           <string>Use Layers</string>
          </property>
          <property name="checked">
           <bool>true</bool>
          </property>
          <property name="prefEntry" stdset="0">
           <cstring>dxfUseDraftVisGroups</cstring>
          </property>
          <property name="prefPath" stdset="0">
           <cstring>Mod/Draft</cstring>
          </property>
         </widget>
        </item>
       </layout>
      </item>
      <item>
       <layout class="QHBoxLayout" name="horizontalLayout_12">
        <item>
         <widget class="Gui::PrefCheckBox" name="gui::prefcheckbox_10">
          <property name="toolTip">
           <string>Hatches will be converted into simple wires</string>
          </property>
          <property name="text">
           <string>Import hatch boundaries as wires</string>
          </property>
          <property name="prefEntry" stdset="0">
           <cstring>importDxfHatches</cstring>
          </property>
          <property name="prefPath" stdset="0">
           <cstring>Mod/Draft</cstring>
          </property>
         </widget>
        </item>
       </layout>
      </item>
      <item>
       <layout class="QHBoxLayout" name="horizontalLayout_13">
        <item>
         <widget class="Gui::PrefCheckBox" name="gui::prefcheckbox_11">
          <property name="toolTip">
           <string>If polylines have a width defined, they will be rendered
as closed wires with correct width</string>
          </property>
          <property name="text">
           <string>Render polylines with width</string>
          </property>
          <property name="prefEntry" stdset="0">
           <cstring>renderPolylineWidth</cstring>
          </property>
          <property name="prefPath" stdset="0">
           <cstring>Mod/Draft</cstring>
          </property>
         </widget>
        </item>
       </layout>
      </item>
      <item>
       <layout class="QHBoxLayout" name="horizontalLayout_2">
        <item>
         <widget class="Gui::PrefCheckBox" name="gui::prefcheckbox_14">
          <property name="toolTip">
           <string>Ellipse export is poorly supported. Use this to export them as polylines instead.</string>
          </property>
          <property name="text">
           <string>Treat ellipses and splines as polylines</string>
          </property>
          <property name="checked">
           <bool>true</bool>
          </property>
          <property name="prefEntry" stdset="0">
           <cstring>DiscretizeEllipses</cstring>
          </property>
          <property name="prefPath" stdset="0">
           <cstring>Mod/Draft</cstring>
          </property>
         </widget>
        </item>
        <item>
         <spacer name="horizontalSpacer">
          <property name="orientation">
           <enum>Qt::Horizontal</enum>
          </property>
          <property name="sizeHint" stdset="0">
           <size>
            <width>40</width>
            <height>20</height>
           </size>
          </property>
         </spacer>
        </item>
        <item>
         <widget class="QLabel" name="label_7">
          <property name="text">
           <string>Max Spline Segment:</string>
          </property>
          <property name="alignment">
           <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
          </property>
         </widget>
        </item>
        <item>
         <widget class="Gui::PrefDoubleSpinBox" name="doubleSpinBox">
          <property name="toolTip">
           <string>Maximum length of each of the polyline segments.
If it is set to '0' the whole spline is treated as a straight segment.</string>
          </property>
          <property name="alignment">
           <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
          </property>
          <property name="suffix">
           <string>mm</string>
          </property>
          <property name="maximum">
           <double>9999.989999999999782</double>
          </property>
          <property name="value">
           <double>5.000000000000000</double>
          </property>
          <property name="prefEntry" stdset="0">
           <cstring>maxsegmentlength</cstring>
          </property>
          <property name="prefPath" stdset="0">
           <cstring>Mod/Draft</cstring>
          </property>
         </widget>
        </item>
       </layout>
      </item>
     </layout>
    </widget>
   </item>
   <item>
    <widget class="QGroupBox" name="groupBox">
     <property name="title">
      <string>Export options</string>
     </property>
     <layout class="QVBoxLayout" name="verticalLayout">
      <item>
       <layout class="QHBoxLayout" name="horizontalLayout_4">
        <item>
         <widget class="Gui::PrefCheckBox" name="gui::prefcheckbox">
          <property name="toolTip">
           <string>All objects containing faces will be exported as 3D polyfaces</string>
          </property>
          <property name="text">
           <string>Export 3D objects as polyface meshes</string>
          </property>
          <property name="prefEntry" stdset="0">
           <cstring>dxfmesh</cstring>
          </property>
          <property name="prefPath" stdset="0">
           <cstring>Mod/Draft</cstring>
          </property>
         </widget>
        </item>
       </layout>
      </item>
      <item>
       <layout class="QHBoxLayout" name="horizontalLayout_10">
        <item>
         <widget class="Gui::PrefCheckBox" name="checkBox_5">
          <property name="toolTip">
           <string>Drawing Views will be exported as blocks.
This might fail for post DXF R12 templates.</string>
          </property>
          <property name="text">
           <string>Export Drawing Views as blocks</string>
          </property>
          <property name="checked">
           <bool>true</bool>
          </property>
          <property name="prefEntry" stdset="0">
           <cstring>dxfExportBlocks</cstring>
          </property>
          <property name="prefPath" stdset="0">
           <cstring>Mod/Draft</cstring>
          </property>
         </widget>
        </item>
       </layout>
      </item>
      <item>
       <layout class="QHBoxLayout" name="horizontalLayout_14">
        <item>
         <widget class="Gui::PrefCheckBox" name="gui::prefcheckbox_12">
          <property name="toolTip">
           <string>Exported objects will be projected to reflect the current view direction</string>
          </property>
          <property name="text">
           <string>Project exported objects along current view direction</string>
          </property>
          <property name="prefEntry" stdset="0">
           <cstring>dxfproject</cstring>
          </property>
          <property name="prefPath" stdset="0">
           <cstring>Mod/Draft</cstring>
          </property>
         </widget>
        </item>
       </layout>
      </item>
     </layout>
    </widget>
   </item>
   <item>
    <spacer name="verticalSpacer">
     <property name="orientation">
      <enum>Qt::Vertical</enum>
     </property>
     <property name="sizeHint" stdset="0">
      <size>
       <width>20</width>
       <height>40</height>
      </size>
     </property>
    </spacer>
   </item>
  </layout>
 </widget>
 <layoutdefault spacing="6" margin="11"/>
 <pixmapfunction>qPixmapFromMimeSource</pixmapfunction>
 <customwidgets>
  <customwidget>
   <class>Gui::PrefRadioButton</class>
   <extends>QRadioButton</extends>
   <header>Gui/PrefWidgets.h</header>
  </customwidget>
  <customwidget>
   <class>Gui::PrefCheckBox</class>
   <extends>QCheckBox</extends>
   <header>Gui/PrefWidgets.h</header>
  </customwidget>
  <customwidget>
   <class>Gui::PrefDoubleSpinBox</class>
   <extends>QDoubleSpinBox</extends>
   <header>Gui/PrefWidgets.h</header>
  </customwidget>
 </customwidgets>
 <resources/>
 <connections/>
</ui>
