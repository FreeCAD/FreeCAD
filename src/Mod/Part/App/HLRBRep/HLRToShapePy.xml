<?xml version="1.0" encoding="utf-8"?>
<GenerateModel xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="generateMetaModel_Module.xsd">
    <PythonExport
      Father="PyObjectBase"
      Name="HLRToShapePy"
      PythonName="Part.HLRToShapePy"
      Twin="HLRBRep_HLRToShape"
      TwinPointer="HLRBRep_HLRToShape"
      Include="HLRBRep_HLRToShape.hxx"
      Namespace="Part"
      FatherInclude="Base/PyObjectBase.h"
      FatherNamespace="Base"
      Constructor="true"
      Delete="true">
    <Documentation>
          <Author Licence="LGPL" Name="Werner Mayer" EMail="wmayer[at]users.sourceforge.net" />
          <UserDocu>HLRToShape(algo: HLRBRep_Algo) -> HLRBRep_HLRToShape

A framework for filtering the computation results of an HLRBRep_Algo algorithm
by extraction. From the results calculated by the algorithm on a shape, a
filter returns the type of edge you want to identify. You can choose any of the
following types of output:
- visible sharp edges
- hidden sharp edges
- visible smooth edges
- hidden smooth edges
- visible sewn edges
- hidden sewn edges
- visible outline edges
- hidden outline edges
- visible isoparameters and
- hidden isoparameters.

Sharp edges present a C0 continuity (non G1). Smooth edges present a G1
continuity (non G2). Sewn edges present a C2 continuity. The result is composed
of 2D edges in the projection plane of the view which the algorithm has worked
with. These 2D edges are not included in the data structure of the visualized
shape. In order to obtain a complete image, you must combine the shapes given
by each of the chosen filters. The construction of the shape does not call a
new computation of the algorithm, but only reads its internal results. The
methods of this shape are almost identic to those of the HLRBrep_PolyHLRToShape
class.
	  </UserDocu>
    </Documentation>
    <Methode Name="vCompound">
        <Documentation>
            <UserDocu>vCompound(Shape=None) -> TopoShape

Sets the extraction filter for visible sharp edges for either shape Shape or
for all added shapes (Shape=None).
            </UserDocu>
        </Documentation>
    </Methode>
    <Methode Name="Rg1LineVCompound">
        <Documentation>
            <UserDocu>Rg1LineVCompound(Shape=None) -> TopoShape

Sets the extraction filter for visible smooth edges for either shape Shape or
for all added shapes (Shape=None).
	    </UserDocu>
        </Documentation>
    </Methode>
    <Methode Name="RgNLineVCompound">
        <Documentation>
            <UserDocu>RgNLineVCompound(Shape=None) -> TopoShape

Sets the extraction filter for visible sewn edges for either shape Shape or for
all added shapes (Shape=None).
	    </UserDocu>
        </Documentation>
    </Methode>
    <Methode Name="outLineVCompound">
        <Documentation>
            <UserDocu>outLineVCompound(Shape=None) -> TopoShape

Sets the extraction filter for visible outline edges for either shape Shape or
for all added shapes (Shape=None).
            </UserDocu>
        </Documentation>
    </Methode>
    <Methode Name="outLineVCompound3d">
        <Documentation>
            <UserDocu>outLineVCompound(Shape=None) -> TopoShape

Sets the extraction filter for visible outline edges in 3D for either shape
Shape or for all added shapes (Shape=None).
            </UserDocu>
        </Documentation>
    </Methode>
    <Methode Name="isoLineVCompound">
        <Documentation>
            <UserDocu>isoLineVCompound(Shape=None) -> TopoShape

Sets the extraction filter for visible isoparameters for either shape Shape or
for all added shapes (Shape=None).
            </UserDocu>
        </Documentation>
    </Methode>
    <Methode Name="hCompound">
        <Documentation>
            <UserDocu>hCompound(Shape=None) -> TopoShape

Sets the extraction filter for hidden sharp edges for either shape Shape or for
all added shapes (Shape=None).
            </UserDocu>
        </Documentation>
    </Methode>
    <Methode Name="Rg1LineHCompound">
        <Documentation>
            <UserDocu>Rg1LineHCompound(Shape=None) -> TopoShape

Sets the extraction filter for hidden smooth edges for either shape Shape or
for all added shapes (Shape=None).
            </UserDocu>
        </Documentation>
    </Methode>
    <Methode Name="RgNLineHCompound">
        <Documentation>
            <UserDocu>RgNLineHCompound(Shape=None) -> TopoShape

Sets the extraction filter for hidden sewn edges for either shape Shape or for
all added shapes (Shape=None).
            </UserDocu>
        </Documentation>
    </Methode>
    <Methode Name="outLineHCompound">
        <Documentation>
            <UserDocu>outLineHCompound(Shape=None) -> TopoShape

Sets the extraction filter for hidden outline edges for either shape Shape or
for all added shapes (Shape=None).
            </UserDocu>
        </Documentation>
    </Methode>
    <Methode Name="isoLineHCompound">
        <Documentation>
            <UserDocu>isoLineHCompound(Shape=None) -> TopoShape

Sets the extraction filter for hidden isoparameters for either shape Shape or
for all added shapes (Shape=None).
            </UserDocu>
        </Documentation>
    </Methode>
    <Methode Name="compoundOfEdges" Keyword="true">
        <Documentation>
            <UserDocu>compoundOfEdges(Type: int, Visible: bool, In3D: bool, Shape=None) -> TopoShape

Returns compound of resulting edges of required type and visibility, taking
into account the kind of space (2d or 3d).  If Shape=None, return it for all
added shapes, otherwise return it for shape Shape.
            </UserDocu>
        </Documentation>
    </Methode>
    </PythonExport>
</GenerateModel>
