
// This file is generated by src/Tools/generateTemaplates/templateClassPyExport.py out of the XML file
// Every change you make here get lost at the next full rebuild!
#ifndef PART_SURFACEOFREVOLUTIONPY_H
#define PART_SURFACEOFREVOLUTIONPY_H

#include <Mod/Part/App/GeometrySurfacePy.h>
#include <Mod/Part/App/Geometry.h>
#include <string>

namespace Part
{

//===========================================================================
// SurfaceOfRevolutionPy - Python wrapper
//===========================================================================

/** The python export class for GeomSurfaceOfRevolution
 */
class PartExport SurfaceOfRevolutionPy : public Part::GeometrySurfacePy
{
public:
    static PyTypeObject   Type;
    static PyMethodDef    Methods[];
    static PyGetSetDef    GetterSetter[];
    virtual PyTypeObject *GetType(void) {return &Type;};

public:
    SurfaceOfRevolutionPy(GeomSurfaceOfRevolution *pcObject, PyTypeObject *T = &Type);
    static PyObject *PyMake(struct _typeobject *, PyObject *, PyObject *);
    virtual int PyInit(PyObject* args, PyObject*k);
    ~SurfaceOfRevolutionPy();

    typedef GeomSurfaceOfRevolution* PointerType ;

    virtual PyObject *_repr(void);        // the representation
    std::string representation(void) const;

    /** @name callbacks and implementers for the python object methods */
    //@{
    //@}


    /** @name callbacks and implementers for the python object attributes */
    //@{
    ///getter callback for the Location attribute
    static PyObject * staticCallback_getLocation (PyObject *self, void *closure);
    /// getter for the Location attribute
    Py::Object getLocation(void) const;
    /// setter callback for the Location attribute
    static int staticCallback_setLocation (PyObject *self, PyObject *value, void *closure);
    /// setter for the Location attribute
    void setLocation(Py::Object arg);
    ///getter callback for the Direction attribute
    static PyObject * staticCallback_getDirection (PyObject *self, void *closure);
    /// getter for the Direction attribute
    Py::Object getDirection(void) const;
    /// setter callback for the Direction attribute
    static int staticCallback_setDirection (PyObject *self, PyObject *value, void *closure);
    /// setter for the Direction attribute
    void setDirection(Py::Object arg);
    ///getter callback for the BasisCurve attribute
    static PyObject * staticCallback_getBasisCurve (PyObject *self, void *closure);
    /// getter for the BasisCurve attribute
    Py::Object getBasisCurve(void) const;
    /// setter callback for the BasisCurve attribute
    static int staticCallback_setBasisCurve (PyObject *self, PyObject *value, void *closure);
    /// setter for the BasisCurve attribute
    void setBasisCurve(Py::Object arg);
    //@}

    /// getter method for special attributes (e.g. dynamic ones)
    PyObject *getCustomAttributes(const char* attr) const;
    /// setter for special attributes (e.g. dynamic ones)
    /// Output: Success=1, Failure=-1, Ignore=0
    int setCustomAttributes(const char* attr, PyObject *obj);
    PyObject *_getattr(char *attr);              // __getattr__ function
    int _setattr(char *attr, PyObject *value);        // __setattr__ function

    /// getter for the object handled by this class
    GeomSurfaceOfRevolution *getGeomSurfaceOfRevolutionPtr(void) const;

    /** @name additional declarations and methods for the wrapper class */
    //@{

    //@}
};

}  //namespace Part

#endif  // PART_SURFACEOFREVOLUTIONPY_H


