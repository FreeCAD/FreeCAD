<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>Gui::Dialog::DlgSettingsArch</class>
 <widget class="QWidget" name="Gui::Dialog::DlgSettingsArch">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>463</width>
    <height>937</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>IFC</string>
  </property>
  <layout class="QVBoxLayout">
   <property name="spacing">
    <number>6</number>
   </property>
   <property name="margin">
    <number>9</number>
   </property>
   <item>
    <widget class="Gui::PrefCheckBox" name="checkBox_7">
     <property name="text">
      <string>Show this dialog when importing and exporting</string>
     </property>
     <property name="prefEntry" stdset="0">
      <cstring>ifcShowDialog</cstring>
     </property>
     <property name="prefPath" stdset="0">
      <cstring>Mod/Arch</cstring>
     </property>
    </widget>
   </item>
   <item>
    <widget class="QGroupBox" name="groupBox_3">
     <property name="title">
      <string>General options</string>
     </property>
     <layout class="QVBoxLayout" name="verticalLayout_3">
      <item>
       <widget class="Gui::PrefCheckBox" name="gui::prefcheckbox_5">
        <property name="toolTip">
         <string>Shows verbose debug messages during import and export
of IFC files in the Report view panel</string>
        </property>
        <property name="text">
         <string>Show debug messages</string>
        </property>
        <property name="prefEntry" stdset="0">
         <cstring>ifcDebug</cstring>
        </property>
        <property name="prefPath" stdset="0">
         <cstring>Mod/Arch</cstring>
        </property>
       </widget>
      </item>
      <item>
       <widget class="Gui::PrefCheckBox" name="checkBox_6">
        <property name="toolTip">
         <string>Clones are used when objects have shared geometry
One object is the base object, the others are clones.</string>
        </property>
        <property name="text">
         <string>Create clones when objects have shared geometry</string>
        </property>
        <property name="checked">
         <bool>true</bool>
        </property>
        <property name="prefEntry" stdset="0">
         <cstring>ifcCreateClones</cstring>
        </property>
        <property name="prefPath" stdset="0">
         <cstring>Mod/Arch</cstring>
        </property>
       </widget>
      </item>
     </layout>
    </widget>
   </item>
   <item>
    <widget class="QGroupBox" name="groupBox_2">
     <property name="title">
      <string>Import options</string>
     </property>
     <layout class="QVBoxLayout" name="verticalLayout">
      <item>
       <layout class="QHBoxLayout" name="horizontalLayout_3">
        <item>
         <widget class="QLabel" name="label_5">
          <property name="text">
           <string>Import arch IFC objects as</string>
          </property>
         </widget>
        </item>
        <item>
         <widget class="Gui::PrefComboBox" name="comboBox">
          <property name="toolTip">
           <string>Specifies what kind of objects will be created in FreeCAD</string>
          </property>
          <property name="prefEntry" stdset="0">
           <cstring>ifcImportModeArch</cstring>
          </property>
          <property name="prefPath" stdset="0">
           <cstring>Mod/Arch</cstring>
          </property>
          <item>
           <property name="text">
            <string>Parametric Arch objects</string>
           </property>
          </item>
          <item>
           <property name="text">
            <string>Non-parametric Arch objects</string>
           </property>
          </item>
          <item>
           <property name="text">
            <string>Simple Part shapes</string>
           </property>
          </item>
          <item>
           <property name="text">
            <string>One compound per floor</string>
           </property>
          </item>
          <item>
           <property name="text">
            <string>Do not import Arch objects</string>
           </property>
          </item>
         </widget>
        </item>
       </layout>
      </item>
      <item>
       <layout class="QHBoxLayout" name="horizontalLayout_5">
        <item>
         <widget class="QLabel" name="label_6">
          <property name="text">
           <string>Import struct IFC objects as</string>
          </property>
         </widget>
        </item>
        <item>
         <widget class="Gui::PrefComboBox" name="comboBox_2">
          <property name="toolTip">
           <string>Specifies what kind of objects will be created in FreeCAD</string>
          </property>
          <property name="prefEntry" stdset="0">
           <cstring>ifcImportModeStruct</cstring>
          </property>
          <property name="prefPath" stdset="0">
           <cstring>Mod/Arch</cstring>
          </property>
          <item>
           <property name="text">
            <string>Non-parametric Arch objects</string>
           </property>
          </item>
          <item>
           <property name="text">
            <string>Simple Part shapes</string>
           </property>
          </item>
          <item>
           <property name="text">
            <string>One compound for all</string>
           </property>
          </item>
          <item>
           <property name="text">
            <string>Do not import structural objects</string>
           </property>
          </item>
         </widget>
        </item>
       </layout>
      </item>
      <item>
       <layout class="QHBoxLayout" name="horizontalLayout_2">
        <item>
         <widget class="QLabel" name="label_2">
          <property name="text">
           <string>Root element:</string>
          </property>
         </widget>
        </item>
        <item>
         <widget class="Gui::PrefLineEdit" name="lineEdit_2">
          <property name="toolTip">
           <string>Only subtypes of the specified element will be imported.
Keep the element IfcProduct to import all building elements.</string>
          </property>
          <property name="text">
           <string notr="true">IfcProduct</string>
          </property>
          <property name="prefEntry" stdset="0">
           <cstring>ifcRootElement</cstring>
          </property>
          <property name="prefPath" stdset="0">
           <cstring>Mod/Arch</cstring>
          </property>
         </widget>
        </item>
       </layout>
      </item>
      <item>
       <widget class="Gui::PrefCheckBox" name="gui::prefcheckbox_6">
        <property name="toolTip">
         <string>Openings will be imported as subtractions, otherwise wall shapes
will already have their openings subtracted</string>
        </property>
        <property name="text">
         <string>Separate openings</string>
        </property>
        <property name="prefEntry" stdset="0">
         <cstring>ifcSeparateOpenings</cstring>
        </property>
        <property name="prefPath" stdset="0">
         <cstring>Mod/Arch</cstring>
        </property>
       </widget>
      </item>
      <item>
       <widget class="Gui::PrefCheckBox" name="checkBox_2">
        <property name="toolTip">
         <string>The importer will try to detect extrusions.
Note that this might slow things down.</string>
        </property>
        <property name="text">
         <string>Detect extrusions</string>
        </property>
        <property name="prefEntry" stdset="0">
         <cstring>ifcGetExtrusions</cstring>
        </property>
        <property name="prefPath" stdset="0">
         <cstring>Mod/Arch</cstring>
        </property>
       </widget>
      </item>
      <item>
       <widget class="Gui::PrefCheckBox" name="checkBox_11">
        <property name="toolTip">
         <string>Split walls made of multiple layers</string>
        </property>
        <property name="text">
         <string>Split multilayer walls</string>
        </property>
        <property name="prefEntry" stdset="0">
         <cstring>ifcSplitLayers</cstring>
        </property>
        <property name="prefPath" stdset="0">
         <cstring>Mod/Arch</cstring>
        </property>
       </widget>
      </item>
      <item>
       <widget class="Gui::PrefCheckBox" name="gui::prefcheckbox_7">
        <property name="toolTip">
         <string>Object names will be prefixed with the IFC ID number</string>
        </property>
        <property name="text">
         <string>Prefix names with ID number</string>
        </property>
        <property name="prefEntry" stdset="0">
         <cstring>ifcPrefixNumbers</cstring>
        </property>
        <property name="prefPath" stdset="0">
         <cstring>Mod/Arch</cstring>
        </property>
       </widget>
      </item>
      <item>
       <widget class="Gui::PrefCheckBox" name="checkBox_3">
        <property name="toolTip">
         <string>If several materials with the same name and color are found in the IFC file,
they will be treated as one.</string>
        </property>
        <property name="text">
         <string>Merge materials with same name and same color</string>
        </property>
        <property name="prefEntry" stdset="0">
         <cstring>ifcMergeMaterials</cstring>
        </property>
        <property name="prefPath" stdset="0">
         <cstring>Mod/Arch</cstring>
        </property>
       </widget>
      </item>
      <item>
       <widget class="Gui::PrefCheckBox" name="checkBox_8">
        <property name="toolTip">
         <string>Each object will have their IFC properties stored in a spreadsheet object</string>
        </property>
        <property name="text">
         <string>Import IFC properties in spreadsheet</string>
        </property>
        <property name="prefEntry" stdset="0">
         <cstring>ifcImportProperties</cstring>
        </property>
        <property name="prefPath" stdset="0">
         <cstring>Mod/Arch</cstring>
        </property>
       </widget>
      </item>
      <item>
       <widget class="Gui::PrefCheckBox" name="checkBox_22">
        <property name="toolTip">
         <string>IFC files can contain unclean or non-solid geometry. If this option is checked, all the geometry is imported, regardless of their validity.</string>
        </property>
        <property name="text">
         <string>Allow invalid shapes</string>
        </property>
        <property name="prefEntry" stdset="0">
         <cstring>ifcAllowInvalid</cstring>
        </property>
        <property name="prefPath" stdset="0">
         <cstring>Mod/Arch</cstring>
        </property>
       </widget>
      </item>
      <item>
       <layout class="QHBoxLayout" name="horizontalLayout_13">
        <item>
         <widget class="QLabel" name="label_4">
          <property name="text">
           <string>Exclude list:</string>
          </property>
         </widget>
        </item>
        <item>
         <widget class="Gui::PrefLineEdit" name="gui::preflineedit">
          <property name="toolTip">
           <string>Comma-separated list of IFC entities to be excluded from imports</string>
          </property>
          <property name="text">
           <string/>
          </property>
          <property name="placeholderText">
           <string/>
          </property>
          <property name="prefEntry" stdset="0">
           <cstring>ifcSkip</cstring>
          </property>
          <property name="prefPath" stdset="0">
           <cstring>Mod/Arch</cstring>
          </property>
         </widget>
        </item>
       </layout>
      </item>
      <item>
       <widget class="Gui::PrefCheckBox" name="checkBox_14">
        <property name="toolTip">
         <string>Fit view during import on the imported objects.
This will slow down the import, but one can watch the import.</string>
        </property>
        <property name="text">
         <string>Fit view while importing</string>
        </property>
        <property name="prefEntry" stdset="0">
         <cstring>ifcFitViewOnImport</cstring>
        </property>
        <property name="prefPath" stdset="0">
         <cstring>Mod/Arch</cstring>
        </property>
       </widget>
      </item>
      <item>
       <widget class="Gui::PrefCheckBox" name="checkBox_18">
        <property name="toolTip">
         <string>Creates a full parametric model on import using stored
FreeCAD object properties</string>
        </property>
        <property name="text">
         <string>Import full FreeCAD parametric definitions if available</string>
        </property>
        <property name="prefEntry" stdset="0">
         <cstring>IfcImportFreeCADProperties</cstring>
        </property>
        <property name="prefPath" stdset="0">
         <cstring>Mod/Arch</cstring>
        </property>
       </widget>
      </item>
     </layout>
    </widget>
   </item>
   <item>
    <widget class="QGroupBox" name="groupBox">
     <property name="title">
      <string>Export options</string>
     </property>
     <layout class="QVBoxLayout" name="verticalLayout_2">
      <item>
       <widget class="Gui::PrefCheckBox" name="checkBox">
        <property name="toolTip">
         <string>Some IFC viewers don't like objects exported as extrusions.
Use this to force all objects to be exported as BREP geometry.</string>
        </property>
        <property name="text">
         <string>Force export as Brep</string>
        </property>
        <property name="prefEntry" stdset="0">
         <cstring>ifcExportAsBrep</cstring>
        </property>
        <property name="prefPath" stdset="0">
         <cstring>Mod/Arch</cstring>
        </property>
       </widget>
      </item>
      <item>
       <widget class="Gui::PrefCheckBox" name="checkBox_4">
        <property name="toolTip">
         <string>Use triangulation options set in the DAE options page</string>
        </property>
        <property name="text">
         <string>Use DAE triangulation options</string>
        </property>
        <property name="prefEntry" stdset="0">
         <cstring>ifcUseDaeOptions</cstring>
        </property>
        <property name="prefPath" stdset="0">
         <cstring>Mod/Arch</cstring>
        </property>
       </widget>
      </item>
      <item>
       <widget class="Gui::PrefCheckBox" name="checkBox_5">
        <property name="toolTip">
         <string>Curved shapes that cannot be represented as curves in IFC
are decomposed into flat facets.
If this is checked, additional calculation is done to join coplanar facets.</string>
        </property>
        <property name="text">
         <string>Join coplanar facets when triangulating</string>
        </property>
        <property name="prefEntry" stdset="0">
         <cstring>ifcJoinCoplanarFacets</cstring>
        </property>
        <property name="prefPath" stdset="0">
         <cstring>Mod/Arch</cstring>
        </property>
       </widget>
      </item>
      <item>
       <widget class="Gui::PrefCheckBox" name="checkBox_9">
        <property name="toolTip">
         <string>When exporting objects without unique ID (UID), the generated UID
will be stored inside the FreeCAD object for reuse next time that object
is exported. This leads to smaller differences between file versions.</string>
        </property>
        <property name="text">
         <string>Store IFC unique ID in FreeCAD objects</string>
        </property>
        <property name="checked">
         <bool>true</bool>
        </property>
        <property name="prefEntry" stdset="0">
         <cstring>ifcStoreUid</cstring>
        </property>
        <property name="prefPath" stdset="0">
         <cstring>Mod/Arch</cstring>
        </property>
       </widget>
      </item>
      <item>
       <widget class="Gui::PrefCheckBox" name="checkBox_10">
        <property name="toolTip">
         <string>IFCOpenShell is a library that allows to import IFC files.
Its serializer functionality allows to give it an OCC shape and it will
produce adequate IFC geometry: NURBS, faceted, or anything else.
Note: The serializer is still an experimental feature!</string>
        </property>
        <property name="text">
         <string>Use IfcOpenShell serializer if available</string>
        </property>
        <property name="prefEntry" stdset="0">
         <cstring>ifcSerialize</cstring>
        </property>
        <property name="prefPath" stdset="0">
         <cstring>Mod/Arch</cstring>
        </property>
       </widget>
      </item>
      <item>
       <widget class="Gui::PrefCheckBox" name="checkBox_12">
        <property name="toolTip">
         <string>2D objects will be exported as IfcAnnotation</string>
        </property>
        <property name="text">
         <string>Export 2D objects as IfcAnnotations</string>
        </property>
        <property name="checked">
         <bool>true</bool>
        </property>
        <property name="prefEntry" stdset="0">
         <cstring>ifcExport2D</cstring>
        </property>
        <property name="prefPath" stdset="0">
         <cstring>Mod/Arch</cstring>
        </property>
       </widget>
      </item>
      <item>
       <widget class="Gui::PrefCheckBox" name="checkBox_13">
        <property name="toolTip">
         <string>All FreeCAD object properties will be stored inside the exported objects,
allowing to recreate a full parametric model on reimport.</string>
        </property>
        <property name="text">
         <string>Export full FreeCAD parametric model</string>
        </property>
        <property name="prefEntry" stdset="0">
         <cstring>IfcExportFreeCADProperties</cstring>
        </property>
        <property name="prefPath" stdset="0">
         <cstring>Mod/Arch</cstring>
        </property>
       </widget>
      </item>
      <item>
       <widget class="Gui::PrefCheckBox" name="checkBox_15">
        <property name="toolTip">
         <string>When possible, similar entities will be used only once in the file if possible.
This can reduce the file size a lot, but will make it less easily readable.</string>
        </property>
        <property name="text">
         <string>Reuse similar entities</string>
        </property>
        <property name="checked">
         <bool>true</bool>
        </property>
        <property name="prefEntry" stdset="0">
         <cstring>ifcCompress</cstring>
        </property>
        <property name="prefPath" stdset="0">
         <cstring>Mod/Arch</cstring>
        </property>
       </widget>
      </item>
      <item>
       <widget class="Gui::PrefCheckBox" name="checkBox_16">
        <property name="toolTip">
         <string>When possible, IFC objects that are extruded rectangles will be
exported as IfcRectangleProfileDef.
However, some other applications might have problems importing that entity.
If this is your case, you can disable this and then all profiles will be exported as IfcArbitraryClosedProfileDef.</string>
        </property>
        <property name="text">
         <string>Disable IfcRectangleProfileDef</string>
        </property>
        <property name="prefEntry" stdset="0">
         <cstring>DisableIfcRectangleProfileDef</cstring>
        </property>
        <property name="prefPath" stdset="0">
         <cstring>Mod/Arch</cstring>
        </property>
       </widget>
      </item>
      <item>
       <widget class="Gui::PrefCheckBox" name="checkBox_17">
        <property name="toolTip">
         <string>Some IFC types such as IfcWall or IfcBeam have special standard versions
like IfcWallStandardCase or IfcBeamStandardCase.
If this option is turned on, FreeCAD will automatically export such objects
as standard cases when the necessary conditions are met.</string>
        </property>
        <property name="text">
         <string>Auto-detect and export as standard cases when applicable</string>
        </property>
        <property name="prefEntry" stdset="0">
         <cstring>getStandardCase</cstring>
        </property>
        <property name="prefPath" stdset="0">
         <cstring>Mod/Arch</cstring>
        </property>
       </widget>
      </item>
      <item>
       <widget class="Gui::PrefCheckBox" name="checkBox_19">
        <property name="toolTip">
         <string>If no site is found in the FreeCAD document, a default one will be added.
A site is not mandatory but a common practice is to have at least one in the file.</string>
        </property>
        <property name="text">
         <string>Add default site if one is not found in the document</string>
        </property>
        <property name="prefEntry" stdset="0">
         <cstring>IfcAddDefaultSite</cstring>
        </property>
        <property name="prefPath" stdset="0">
         <cstring>Mod/Arch</cstring>
        </property>
       </widget>
      </item>
      <item>
       <widget class="Gui::PrefCheckBox" name="checkBox_21">
        <property name="toolTip">
         <string>If no building is found in the FreeCAD document, a default one will be added.
Warning: The IFC standard asks for at least one building in each file. By turning this option off, you will produce a non-standard IFC file.
However, at FreeCAD, we believe having a building should not be mandatory, and this option is there to have a chance to demonstrate our point of view.</string>
        </property>
        <property name="text">
         <string>Add default building if one is not found in the document (no standard)</string>
        </property>
        <property name="checked">
         <bool>true</bool>
        </property>
        <property name="prefEntry" stdset="0">
         <cstring>IfcAddDefaultBuilding</cstring>
        </property>
        <property name="prefPath" stdset="0">
         <cstring>Mod/Arch</cstring>
        </property>
       </widget>
      </item>
      <item>
       <widget class="Gui::PrefCheckBox" name="checkBox_20">
        <property name="toolTip">
         <string>If no building storey is found in the FreeCAD document, a default one will be added.
A building storey is not mandatory but a common practice to have at least one in the file.</string>
        </property>
        <property name="text">
         <string>Add default building storey if one is not found in the document</string>
        </property>
        <property name="prefEntry" stdset="0">
         <cstring>IfcAddDefaultStorey</cstring>
        </property>
        <property name="prefPath" stdset="0">
         <cstring>Mod/Arch</cstring>
        </property>
       </widget>
      </item>
      <item>
       <layout class="QHBoxLayout" name="horizontalLayout">
        <item>
         <widget class="QLabel" name="label">
          <property name="text">
           <string>IFC file units</string>
          </property>
         </widget>
        </item>
        <item>
         <widget class="Gui::PrefComboBox" name="comboBox_3">
          <property name="toolTip">
           <string>The units you want your IFC file to be exported to. Note that IFC file are ALWAYS written in metric units. Imperial units are only a conversion applied on top of it. But some BIM applications will use this to choose which unit to work with when opening the file.</string>
          </property>
          <property name="prefEntry" stdset="0">
           <cstring>ifcUnit</cstring>
          </property>
          <property name="prefPath" stdset="0">
           <cstring>Mod/Arch</cstring>
          </property>
          <item>
           <property name="text">
            <string>Metric</string>
           </property>
          </item>
          <item>
           <property name="text">
            <string>Imperial</string>
           </property>
          </item>
         </widget>
        </item>
       </layout>
      </item>
     </layout>
    </widget>
   </item>
   <item>
    <spacer name="verticalSpacer">
     <property name="orientation">
      <enum>Qt::Vertical</enum>
     </property>
     <property name="sizeHint" stdset="0">
      <size>
       <width>20</width>
       <height>40</height>
      </size>
     </property>
    </spacer>
   </item>
  </layout>
 </widget>
 <layoutdefault spacing="6" margin="11"/>
 <pixmapfunction>qPixmapFromMimeSource</pixmapfunction>
 <customwidgets>
  <customwidget>
   <class>Gui::PrefCheckBox</class>
   <extends>QCheckBox</extends>
   <header>Gui/PrefWidgets.h</header>
  </customwidget>
  <customwidget>
   <class>Gui::PrefComboBox</class>
   <extends>QComboBox</extends>
   <header>Gui/PrefWidgets.h</header>
  </customwidget>
  <customwidget>
   <class>Gui::PrefLineEdit</class>
   <extends>QLineEdit</extends>
   <header>Gui/PrefWidgets.h</header>
  </customwidget>
 </customwidgets>
 <resources/>
 <connections/>
</ui>
