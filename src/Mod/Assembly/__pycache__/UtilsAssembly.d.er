##[pylyzer] failed /home/Ryan/documents/git/FreeCAD/src/Mod/Assembly/UtilsAssembly.py 1748993977 43804
.math: Never

.App: Never

.Part: Never


.Gui: Never

.___v_desugar_1: Never
.QtCore: Never
.QtGui: Never
.QtWidgets: Never


.translate: Never
.__title__: {"Assembly utilitary functions"}
.__author__: {"Ondsel"}
.__url__: {"https:..www.freecad.org"}
.activePartOrAssembly: () -> Never
.activeAssembly: () -> {None}
.activePart: () -> {None}
.isAssemblyCommandActive: () -> Bool
.isDocTemporary: |Type_239 <: Structural({.Temporary = ?542}), Type_542: Type|(doc: Type_239) -> {False} or Type_542
.assembly_has_at_least_n_parts: (n: Obj) -> Bool
.number_of_components_in: (assembly: {None}) -> Nat
.isLink: |E: Type, Type_247 <: Structural({.ElementCount = ?E; .TypeId = Never})|(obj: Type_247) -> Never
.isLinkGroup: |E: Type, T: Type, Type_584: Type, Type_585: Type, T <: Structural({.ElementCount = ?R and ?679; .isDerivedFrom = (self: Obj, ?584) -> ?585 and (self: Obj, ?590) -> ?R; .getLinkedObject = (self: Obj) -> ?T; .TypeId = ?E}), R: Type, Type_590: Type, Type_679: Type|(obj: T) -> {.obj.TypeId in {"App::Link"}} and {.obj.ElementCount in {Type_v_global_829: Nat | ((Type_v_global_829 >= 0) and (Type_v_global_829 != 0) or Type_v_global_829 == 0)}}
.getObject: |Type_722: Type, Type_252 <: Structural({.__len__ = (self: Never) -> Nat; .__getitem__ = (self: Obj, ?707) -> ?708 and (self: Obj, ?722) -> ?723}), Type_723: Type, Type_707: Type, Type_708: Type|(ref: Type_252) -> {None}
.process_body: |E: Type, Type_254 <: Structural({.OutList = ?938}), T: Type, Type_938 <: global::Iterable(?T), Type_256: Type|(body: Type_254, returnObj: Type_256, names: Structural({.__len__ = (self: Never) -> Nat; .__getitem__ = (self: Obj, Obj) -> E and (self: Obj, Obj) -> E}), i: Nat) -> Type_256
.isBodySubObject: (obj: Obj) -> Never
.fixBodyExtraFeatureInSub: (doc_name: Obj, sub_name: Str) -> Str
.getObjectInPart: |E: Type, Type_1084: Type, Type_1106 <: global::Iterable(?T), T: Type, Type_1084 <: Structural({.getLinkedObject = (self: Obj) -> ?1084; .Name = ?E; .OutListRecursive = ?1106; .TypeId = ?E and ?1094}), Type_1094: Type|(objName: E, part: Type_1084) -> {None}
.getRootPath: |Type_273 <: Structural({.Parents = ?1129; .Tip = ?1206; .TypeId = ?E}), E: Type, Type_1206: Type, Type_1129: Type|(obj: Type_273, part: Structural({.Name = Obj; .Document = Obj})) -> global::Tuple([{None}, {""}])
.getObjPlcRelativeToPart: |Type_4942: Type, Type_4794 <: Structural({.Name = ?4884; .Document = ?4942}), Type_4884: Type|(assembly: Type_4794, ref: Structural({.__len__ = (self: Never) -> Nat; .__getitem__ = (self: Obj, Obj) -> Never and (self: Obj, Obj) -> Structural({.__len__ = (self: Never) -> Nat})})) -> Never
.getJcsPlcRelativeToPart: (assembly: Obj, jcsPlc: Obj, ref: Obj) -> Never
.getJcsGlobalPlc: (jcsPlc: Obj, ref: Obj) -> Never
.getGlobalPlacement: |Type_446 :> {None}, Type_723: Type, Type_4433 <: Structural({.__len__ = (self: Never) -> Nat; .__getitem__ = (self: Obj, ?Type_722) -> ?Type_723 and (self: Obj, ?Type_707) -> ?Type_708}), Type_708 <: Structural({.__len__ = (self: Never) -> Nat}), Type_722 :> {0}, Type_707 :> {0, 1}|(ref: Type_4433, targetObj: Type_446 := Type_446 and Type_446) -> Structural({.__mul__ = (self: Never, Obj) -> Never})
.isThereOneRootAssembly: () -> {False}
.getElementName: (full_name: Str) -> Str
.getObjsNamesAndElement: |T :> Str|(obj_name: T, sub_name: Str) -> global::Tuple([global::List!(T, _: Nat), T])
.getFullObjName: (obj_name: Str, sub_name: Str) -> Str
.getFullElementName: |R: Type, Type_301 <: Structural({.__add__ = (self: Never, ?R) -> ?O}), O: Type|(obj_name: Type_301, sub_name: R) -> O
.extract_type_and_number: (element_name: global::Iterable(Str)) -> Never
.findElementClosestVertex: (ref: global::Indexable(Obj, global::Indexable(Obj, Str)), mousePos: Obj) -> {""}
.getPointsFromVertexes: (vertexes: global::Iterable(Structural({.Point = Never}))) -> Never
.findClosestPointToMousePos: |Type_313 <: Structural({.__sub__ = (self: Never, ?R) -> ?O}), R: Type, O: Type|(candidates_points: global::Iterable(R), mousePos: Type_313) -> global::Tuple([{None}, {None}])
.findVertexNameInObject: |E: Type, Type_315 <: Structural({.Point = ?E})|(vertex: Type_315, obj: Structural({.Shape = Obj})) -> {""}
.color_from_unsigned: |R: Type, O: Type, Type_319 <: Structural({.__rshift__ = (self: Never, ?R) -> ?O and (self: Never, ?R) -> ?O and (self: Never, ?R) -> ?O})|(c: Type_319) -> global::List!(Float, 3)
.getJointsOfType: |Type_2601: Type, Type_321 <: Structural({.isDerivedFrom = (self: Obj, ?2596) -> ?2597 and (self: Obj, ?2601) -> ?R; .Joints = ?2617}), T <: Structural({.JointType = ?R}), Type_2597: Type, R: Type, Type_2617: Type, Type_2596: Type|(asm: Type_321, jointTypes: Structural({.__contains__ = (self: Never, R) -> Bool})) -> global::List!(T, 1)
.getBomGroup: |Type_2663: Type, Type_2665: Type, Type_2664: Type, T: Type, Type_324 <: Structural({.OutList = ?2650; .newObject = (self: Obj, ?2663, ?2664) -> ?2665}), Type_2650 <: global::Iterable(?T)|(assembly: Type_324) -> {None}
.getJointGroup: |Type_2698: Type, T: Type, Type_2699: Type, Type_326 <: Structural({.OutList = ?2685; .newObject = (self: Obj, ?2698, ?2699) -> ?2700}), Type_2700: Type, Type_2685 <: global::Iterable(?T)|(assembly: Type_326) -> {None}
.getViewGroup: |Type_2720 <: global::Iterable(?T), T: Type, Type_2734: Type, Type_2733: Type, Type_2735: Type, Type_330 <: Structural({.OutList = ?2720; .newObject = (self: Obj, ?2733, ?2734) -> ?2735})|(assembly: Type_330) -> {None}
.getSimulationGroup: |Type_2770: Type, T: Type, Type_332 <: Structural({.OutList = ?2755; .newObject = (self: Obj, ?2768, ?2769) -> ?2770}), Type_2755 <: global::Iterable(?T), Type_2768: Type, Type_2769: Type|(assembly: Type_332) -> {None}
.isAssemblyGrounded: () -> {False}
.removeObjAndChilds: (obj: Obj) -> NoneType
.removeObjsAndChilds: (objs: global::Iterable(Structural({.OutList = global::Iterable(Never); .TypeId = {_: Never | True}}))) -> NoneType
.getMovablePartsWithin: |E :> {"App::Link"}, O <: Bool, T: Type, Type_590 :> {"Assembly::AssemblyLink"}, T <: Structural({.ElementCount = ?R and ?Type_679; .isDerivedFrom = (self: Obj, ?Type_584) -> ?Type_585 and (self: Obj, ?Type_590) -> ?R; .getLinkedObject = (self: Obj) -> ?T; .TypeId = ?E; .ElementList = ?2927}), T <: Structural({.ElementCount = ?R and ?Type_679; .isDerivedFrom = (self: Obj, ?Type_584) -> ?Type_585 and (self: Obj, ?Type_590) -> ?R; .getLinkedObject = (self: Obj) -> ?T; .TypeId = ?E}), R <: Nat, Type_679 <: Structural({.__gt__ = (self: Never, ?R) -> Bool}), Type_2927: Type, Type_585 <: Structural({.__or__ = (self: Never, ?R) -> ?O}), Type_584 :> {"Assembly::AssemblyLink", "Assembly::AssemblyObject"}|(group: T, partsAsSolid: Bool := {False} and Bool) -> global::List(T, _: Nat)
.getSubMovingParts: |E: Type, Type_2980: Type, Type_2973 <: Structural({.getLinkedObject = (self: Obj) -> ?3119; .isDerivedFrom = (self: Obj, ?2979) -> ?2980 and (self: Obj, ?2988) -> ?2989; .TypeId = ?E}), Type_2988: Type, Type_2989: Type, Type_3119: Type, Type_2979: Type|(obj: Type_2973, partsAsSolid: Bool) -> global::List!(Never, 0)
.getCenterOfMass: (parts: global::Iterable(Never)) -> Never
.getObjMassAndCom: (obj: Obj, containingPart: {None} := {None} and {None}) -> global::Tuple([{0}, Never])
.getCenterOfBoundingBox: (objs: global::Iterable(NoneType), refs: global::Iterable(Structural({.__len__ = (self: Never) -> Nat; .__getitem__ = (self: Obj, Obj) -> Never and (self: Obj, Obj) -> Structural({.__len__ = (self: Never) -> Nat})}))) -> Never
.findCylindersIntersection: |E: Type, Type_360 <: Structural({.Shape = ?3629}), E :> Nat, Type_3629: Type, R :> {1}, R: Type|(obj: Type_360, surface: Structural({.Center = Structural({.__add__ = (self: Never, R) -> Never}); .Axis = R}), edge: Structural({.CenterOfGravity = E}), elt_index: Structural({.__sub__ = (self: Never, R) -> E})) -> Never
.openEditingPlacementDialog: (obj: Obj, propName: Str) -> NoneType
.setPickableState: |Type_369 <: Structural({.ViewObject = ?3761}), Type_3761: Type|(obj: Type_369, state: Bool) -> NoneType
.setJointsPickableState: |T: Type, Type_371 <: Structural({.Objects = ?3777}), Type_3777 <: global::Iterable(?T)|(doc: Type_371, state: Bool) -> NoneType
.applyOffsetToPlacement: |Type_3800: Type, Type_3799: Type, Type_372 <: Structural({.Base = ?O and ?3799; .Rotation = ?3800}), O: Type|(plc: Type_372, offset: Obj) -> Type_372
.applyRotationToPlacement: |Type_384: Type|(plc: Type_384, angle: Obj) -> Type_384
.applyRotationToPlacementAlongAxis: |Type_384: Type|(plc: Type_384, angle: Obj, axis: Obj) -> Type_384
.flipPlacement: |Type_384: Type|(plc: Type_384) -> Type_384
.arePlacementSameDir: |Type_389 <: Structural({.Rotation = ?3838}), Type_3838: Type|(plc1: Type_389, plc2: Structural({.Rotation = Obj})) -> {.zAxis1.dot(.zAxis2) in {Type_v_global_2168: Nat | (Type_v_global_2168 == 0 or (Type_v_global_2168 >= 0) and (Type_v_global_2168 != 0))}}
.arePlacementZParallel: |Type_3848: Type, Type_395 <: Structural({.Rotation = ?3848})|(plc1: Type_395, plc2: Structural({.Rotation = Obj})) -> {.zAxis1.cross(.zAxis2).Length in {Type_v_global_2176: Float | ((Type_v_global_2176 <= 0.000001) and (Type_v_global_2176 != 0.000001) or Type_v_global_2176 == 0.000001)}}
.removeTNPFromSubname: (doc_name: Obj, obj_name: Obj, sub_name: Str) -> Str

.findPlacement: |Type_723: Type, Type_708 <: Structural({.__len__ = (self: Never) -> Nat}), Type_252 <: Structural({.__len__ = (self: Never) -> Nat; .__getitem__ = (self: Obj, ?Type_707) -> ?Type_708 and (self: Obj, ?Type_722) -> ?Type_723}), Type_707 :> {0, 1}, Type_722 :> {0}|(ref: Type_252, ignoreVertex: Bool := {False} and Bool) -> Never
.get_element: |E: Type, Type_4416 <: Structural({.getElement = (self: Obj, ?415) -> ?4416; .CenterOfGravity = ?E}), Type_4416: Type, Type_415: Type, Type_4416 <: Structural({.getElement = (self: Never, ?415) -> ?4416; .CenterOfGravity = ?E}), Type_415 :> Str|(shape: Type_4416, name: Type_415) -> Type_4416
.isRefValid: |Type_723: Type, Type_4433 <: Structural({.__len__ = (self: Never) -> Nat; .__getitem__ = (self: Obj, ?Type_722) -> ?Type_723 and (self: Obj, ?Type_707) -> ?Type_708}), Type_708 <: Structural({.__len__ = (self: Never) -> Nat}), Type_722 :> {0}, Type_707 :> {0, 1}|(ref: Type_4433, number_sub: {1, 2}) -> {True}
.round_vector: |Type_4461 <: Float, Type_420 <: Structural({.x = ?4461; .z = ?4463; .y = ?4462}), Type_421 :> {10}, Type_4462 <: Float, Type_4463 <: Float|(v: Type_420, decimals: Type_421 := Type_421 and Type_421) -> Never
.saveAssemblyPartsPlacements: |Type_679 <: Structural({.__gt__ = (self: Never, ?R) -> Bool}), E :> {"App::Link"}, T <: Structural({.ElementCount = ?R and ?Type_679; .isDerivedFrom = (self: Obj, ?Type_584) -> ?Type_585 and (self: Obj, ?Type_590) -> ?R; .getLinkedObject = (self: Obj) -> ?T; .TypeId = ?E; .ElementList = ?Type_2927}), Type_590 :> {"Assembly::AssemblyLink"}, R <: Nat, Type_2973 <: Structural({.getLinkedObject = (self: Obj) -> ?Type_3119; .isDerivedFrom = (self: Obj, ?Type_2979) -> ?Type_2980 and (self: Obj, ?Type_2988) -> ?Type_2989; .TypeId = ?E}), Type_584 :> {"Assembly::AssemblyLink", "Assembly::AssemblyObject"}, Type_585 <: Structural({.__or__ = (self: Never, ?R) -> ?O}), Type_2989 <: Bool, Type_2980 <: Bool, O <: Bool, T <: Structural({.ElementCount = ?R and ?Type_679; .isDerivedFrom = (self: Obj, ?Type_584) -> ?Type_585 and (self: Obj, ?Type_590) -> ?R; .getLinkedObject = (self: Obj) -> ?T; .TypeId = ?E; .ElementList = ?Type_2927}), Type_3119: Type, Type_2979 :> {"App::Part", "Part::Feature"}, Type_2988 :> {"App::Part"}, Type_2927 <: global::List!(?Type_2973, 0)|(assembly: T) -> global::Dict!({Never: Never})
.restoreAssemblyPartsPlacements: |Type_2973 <: Structural({.getLinkedObject = (self: Obj) -> ?Type_3119; .isDerivedFrom = (self: Obj, ?Type_2979) -> ?Type_2980 and (self: Obj, ?Type_2988) -> ?Type_2989; .TypeId = ?E}), E :> {"App::Link"}, Type_590 :> {"Assembly::AssemblyLink"}, Type_679 <: Structural({.__gt__ = (self: Never, ?R) -> Bool}), R <: Nat, Type_2927 <: global::List!(?Type_2973, 0), Type_2980 <: Bool, T <: Structural({.ElementCount = ?R and ?Type_679; .isDerivedFrom = (self: Obj, ?Type_584) -> ?Type_585 and (self: Obj, ?Type_590) -> ?R; .getLinkedObject = (self: Obj) -> ?T; .TypeId = ?E; .ElementList = ?Type_2927}), Type_585 <: Structural({.__or__ = (self: Never, ?R) -> ?O}), Type_584 :> {"Assembly::AssemblyLink", "Assembly::AssemblyObject"}, O <: Bool, T <: Structural({.ElementCount = ?R and ?Type_679; .isDerivedFrom = (self: Obj, ?Type_584) -> ?Type_585 and (self: Obj, ?Type_590) -> ?R; .getLinkedObject = (self: Obj) -> ?T; .TypeId = ?E; .ElementList = ?Type_2927}), Type_2989 <: Bool, Type_3119: Type, Type_2979 :> {"App::Part", "Part::Feature"}, Type_2988 :> {"App::Part"}, R: Type|(assembly: T, initialPlcs: Structural({.__contains__ = (self: Never, R) -> Bool; .__getitem__ = (self: Obj, Obj) -> Never})) -> NoneType
.getComAndSize: |Type_434 <: Structural({.ViewObject = ?4643 and ?4646}), Type_4643: Type, Type_4646: Type|(assembly: Type_434) -> global::Tuple([Never, Never])
.getAssemblyShapes: |Type_2927 <: global::List!(?Type_2973, 0), E :> {"App::Link"}, T <: Structural({.ElementCount = ?R and ?Type_679; .isDerivedFrom = (self: Obj, ?Type_584) -> ?Type_585 and (self: Obj, ?Type_590) -> ?R; .getLinkedObject = (self: Obj) -> ?T; .TypeId = ?E; .ElementList = ?Type_2927}), Type_590 :> {"Assembly::AssemblyLink"}, T <: Structural({.ElementCount = ?R and ?Type_679; .isDerivedFrom = (self: Obj, ?Type_584) -> ?Type_585 and (self: Obj, ?Type_590) -> ?R; .getLinkedObject = (self: Obj) -> ?T; .TypeId = ?E; .ElementList = ?Type_2927}), R <: Nat, Type_2980 <: Bool, Type_584 :> {"Assembly::AssemblyLink", "Assembly::AssemblyObject"}, Type_2989 <: Bool, O <: Bool, T: Type, Type_679 <: Structural({.__gt__ = (self: Never, ?R) -> Bool}), Type_585 <: Structural({.__or__ = (self: Never, ?R) -> ?O}), Type_3119: Type, Type_2979 :> {"App::Part", "Part::Feature"}, Type_2988 :> {"App::Part"}, Type_2973 <: Structural({.getLinkedObject = (self: Obj) -> ?Type_3119; .isDerivedFrom = (self: Obj, ?Type_2979) -> ?Type_2980 and (self: Obj, ?Type_2988) -> ?Type_2989; .TypeId = ?E})|(assembly: T) -> global::List!(T, 1)
.getJointDistance: |R: Type, Type_438 <: Structural({.Placement2 = ?R; .Reference1 = ?Type_279; .Placement1 = ?R; .Reference2 = ?Type_279}), Type_279: Type|(joint: Type_438) -> Int
.getJointXYAngle: |Type_440 <: Structural({.Placement2 = ?R; .Reference1 = ?Type_279; .Placement1 = ?R; .Reference2 = ?Type_279}), R: Type, Type_279: Type|(joint: Type_440) -> Never
.getMovingPart: |Type_4942: Type, Type_4794 <: Structural({.Name = ?4884; .Document = ?4942}), Type_4884: Type|(assembly: Type_4794, ref: Structural({.__len__ = (self: Never) -> Nat; .__getitem__ = (self: Obj, Obj) -> Never and (self: Obj, Obj) -> Structural({.__len__ = (self: Never) -> Nat})})) -> {None}
.truncateSubAtFirst: (sub: Str, target: Obj) -> Str
.truncateSubAtLast: (sub: Str, target: Obj) -> Str
.swapElNameInSubname: (sub_name: Str, new_elName: Obj) -> Str
.addVertexToReference: |Type_456 :> global::List!(?T or ?T, 2), Type_456 <: Structural({.__len__ = (self: Never) -> Nat; .__getitem__ = (self: Never, ?5159) -> ?T and (self: Never, ?5176) -> ?T}), Type_456 :> global::List!(?T or ?T, 2), Type_456 <: Structural({.__len__ = (self: Never) -> Nat; .__getitem__ = (self: Obj, ?5159) -> ?T and (self: Obj, ?5176) -> ?T}), T: Type, Type_5176: Type, Type_5159: Type|(ref: Type_456, vertex_name: Obj) -> Type_456
.createPart: (partName: Obj, doc: Bool) -> global::Tuple([Never, Never])
.getLinkGroup: |E: Type, R <: Structural({.InList = ?5305; .TypeId = ?E}), T: Type, Type_5305 <: global::Iterable(?T)|(linkElement: R) -> {None}
.getParentPlacementIfNeeded: |T <: Structural({.ElementList = ?Type_5313; .TypeId = ?E}), R <: Structural({.InList = ?Type_5305; .TypeId = Never}), Type_5313 <: Structural({.__contains__ = (self: Never, ?R) -> Bool}), E :> {"App::Link"}, Type_5305 <: global::Iterable(?T)|(part: R) -> Never
.generatePropertySettings: |Type_5390 <: global::Iterable(?T), K: Type, Self <: global::Indexable(?K, ?V), T: Type, V: Type, Type_468 <: Structural({.getTypeIdOfProperty = (self: Obj, ?T) -> {"App::PropertyFloat"}; .getPropertyByName = (self: Obj, ?T) -> ?Self; .PropertiesList = ?5390})|(documentObject: Type_468) -> Str
