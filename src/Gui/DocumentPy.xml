<?xml version="1.0" encoding="UTF-8"?>
<GenerateModel xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="generateMetaModel_Module.xsd">
  <PythonExport
    Father="PersistencePy"
    Name="DocumentPy"
    Twin="Document"
    TwinPointer="Document"
    Include="Gui/Document.h"
    Namespace="Gui"
    FatherInclude="Base/PersistencePy.h"
    FatherNamespace="Base">
    <Documentation>
      <Author Licence="LGPL" Name="Werner Mayer" EMail="wmayer@users.sourceforge.net" />
      <UserDocu>This is a Document class</UserDocu>
    </Documentation>
    <Methode Name="show">
      <Documentation>
        <UserDocu>show(objName) -> None

Show an object.

objName : str
    Name of the `Gui.ViewProvider` to show.</UserDocu>
      </Documentation>
    </Methode>
    <Methode Name="hide">
      <Documentation>
        <UserDocu>hide(objName) -> None

Hide an object.

objName : str
    Name of the `Gui.ViewProvider` to hide.</UserDocu>
      </Documentation>
    </Methode>
    <Methode Name="setPos">
      <Documentation>
        <UserDocu>setPos(objName, matrix) -> None

Set the position of an object.

objName : str
    Name of the `Gui.ViewProvider`.

matrix : Base.Matrix
    Transformation to apply on the object.</UserDocu>
      </Documentation>
    </Methode>
    <Methode Name="setEdit">
      <Documentation>
        <UserDocu>setEdit(obj, mod=0, subName) -> bool

Set an object in edit mode.

obj : str, App.DocumentObject, Gui.ViewPrivider
    Object to set in edit mode.
mod : int
    Edit mode.
subName : str
    Subelement name. Optional.</UserDocu>
      </Documentation>
    </Methode>
    <Methode Name="getInEdit">
      <Documentation>
        <UserDocu>getInEdit() -> Gui.ViewProviderDocumentObject or None

Returns the current object in edit mode or None if there is no such object.</UserDocu>
      </Documentation>
    </Methode>
    <Methode Name="resetEdit">
      <Documentation>
        <UserDocu>resetEdit() -> None

End the current editing.</UserDocu>
      </Documentation>
    </Methode>
    <Methode Name="addAnnotation">
      <Documentation>
        <UserDocu>addAnnotation(annoName, fileName, modName) -> None

Add an Inventor object from a file.

annoName : str
    Annotation name.
fileName : str
    File name.
modName : str
    Display mode name. Optional.</UserDocu>
      </Documentation>
    </Methode>
    <Methode Name="update">
      <Documentation>
        <UserDocu>update() -> None

Update the view representations of all objects.</UserDocu>
      </Documentation>
    </Methode>
    <Methode Name="getObject">
      <Documentation>
        <UserDocu>getObject(objName) -> object or None

Return the object with the given name. If no one exists, return None.

ObjName : str
    Object name.</UserDocu>
      </Documentation>
    </Methode>
    <Methode Name="activeObject">
      <Documentation>
        <UserDocu>activeObject() -> object or None

The active object of the document. Deprecated, use ActiveObject.</UserDocu>
      </Documentation>
    </Methode>
    <Methode Name="activeView">
      <Documentation>
        <UserDocu>activeView() -> object or None

The active view of the document. Deprecated, use ActiveView.</UserDocu>
      </Documentation>
    </Methode>
    <Methode Name="mdiViewsOfType" Const="true">
      <Documentation>
      <UserDocu>mdiViewsOfType(type) -> list of MDIView

Return a list of mdi views of a given type.

type : str
    Type name.</UserDocu>
      </Documentation>
    </Methode>
    <Methode Name="save">
      <Documentation>
        <UserDocu>save() -> bool

Attempts to save the document</UserDocu>
      </Documentation>
    </Methode>
    <Methode Name="saveAs">
      <Documentation>
        <UserDocu>saveAs() -> bool

Attempts to save the document under a new name</UserDocu>
      </Documentation>
    </Methode>
    <Methode Name="sendMsgToViews">
      <Documentation>
      <UserDocu>sendMsgToViews(msg) -> None

Send a message to all views of the document.

msg : str</UserDocu>
      </Documentation>
    </Methode>
    <Methode Name="mergeProject">
      <Documentation>
        <UserDocu>mergeProject(fileName) -> None

Merges this document with another project file.

fileName : str
    File name.</UserDocu>
      </Documentation>
    </Methode>
    <Methode Name="toggleTreeItem">
      <Documentation>
        <UserDocu>toggleTreeItem(obj, mod=0, subName) -> None

Change TreeItem of a document object.

obj : App.DocumentObject
mod : int
    Item mode.
    0: Toggle, 1: Collapse, 2: Expand, 3: Expand path.
subName : str
    Subelement name. Optional.</UserDocu>
      </Documentation>
    </Methode>
    <Methode Name="scrollToTreeItem">
      <Documentation>
        <UserDocu>scrollToTreeItem(obj) -> None

Scroll the tree view to the item of a view object.

obj : Gui.ViewProviderDocumentObject</UserDocu>
      </Documentation>
    </Methode>
    <Methode Name="toggleInSceneGraph">
      <Documentation>
        <UserDocu>toggleInSceneGraph(obj) -> None

Add or remove view object from scene graph of all views depending
on its canAddToSceneGraph().

obj : Gui.ViewProvider</UserDocu>
      </Documentation>
    </Methode>
    <Attribute Name="ActiveObject" ReadOnly="false">
      <Documentation>
        <UserDocu>The active object of the document.</UserDocu>
      </Documentation>
      <Parameter Name="ActiveObject" Type="Object" />
    </Attribute>
    <Attribute Name="ActiveView" ReadOnly="false">
      <Documentation>
        <UserDocu>The active view of the document.</UserDocu>
      </Documentation>
      <Parameter Name="ActiveView" Type="Object" />
    </Attribute>
    <Attribute Name="EditingTransform">
      <Documentation>
        <UserDocu>The editing transformation matrix.</UserDocu>
      </Documentation>
      <Parameter Name="EditingTransform" Type="Object" />
    </Attribute>
    <Attribute Name="InEditInfo">
      <Documentation>
        <UserDocu>A tuple(obj,subname,subElement,editMode) of editing object reference, or None if no object is in edit.</UserDocu>
      </Documentation>
    <Parameter Name="InEditInfo" Type="Object" />
    </Attribute>
    <Attribute Name="EditMode" ReadOnly="true">
      <Documentation>
        <UserDocu>Current edit mode. Only meaningful when there is a current object in edit.</UserDocu>
      </Documentation>
    <Parameter Name="EditMode" Type="Int" />
    </Attribute>
    <Attribute Name="Document" ReadOnly="true">
      <Documentation>
        <UserDocu>The related App document to this Gui document.</UserDocu>
      </Documentation>
      <Parameter Name="Document" Type="Object" />
    </Attribute>
    <Attribute Name="Transacting" ReadOnly="true">
      <Documentation>
        <UserDocu>Indicate whether the document is undoing/redoing.</UserDocu>
      </Documentation>
      <Parameter Name="Transacting" Type="Boolean" />
    </Attribute>
    <Attribute Name="Modified" ReadOnly="true">
      <Documentation>
        <UserDocu>Returns True if the document is marked as modified, and False otherwise.</UserDocu>
      </Documentation>
      <Parameter Name="Modified" Type="Boolean" />
    </Attribute>
  </PythonExport>
</GenerateModel>
