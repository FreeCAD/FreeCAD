<?xml version="1.0" encoding="UTF-8"?>
<GenerateModel xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="generateMetaModel_Module.xsd">
  <PythonExport
    Father="PersistencePy"
    Name="DocumentPy"
    Twin="Document"
    TwinPointer="Document"
    Include="Gui/Document.h"
    Namespace="Gui"
    FatherInclude="Base/PersistencePy.h"
    FatherNamespace="Base">
    <Documentation>
      <Author Licence="LGPL" Name="Werner Mayer" EMail="wmayer@users.sourceforge.net" />
      <UserDocu>This is a Document class</UserDocu>
    </Documentation>
    <Methode Name="show">
      <Documentation>
        <UserDocu>Show the object
show() -> None
</UserDocu>
      </Documentation>
    </Methode>
    <Methode Name="hide">
      <Documentation>
        <UserDocu>Hide the object
hide() -> None
</UserDocu>
      </Documentation>
    </Methode>
    <Methode Name="setPos">
      <Documentation>
        <UserDocu>Set the position
setPos(matrix) -> None</UserDocu>
      </Documentation>
    </Methode>
    <Methode Name="setEdit">
      <Documentation>
        <UserDocu>Set the given object in edit mode.
setEdit([String:Name|ViewProvider|DocumentObject]|,mod,subname=None) -> Bool
</UserDocu>
      </Documentation>
    </Methode>
    <Methode Name="getInEdit">
      <Documentation>
        <UserDocu>Returns the current object in edit mode or None if there is no such object
getInEdit() -> Object or None
</UserDocu>
      </Documentation>
    </Methode>
    <Methode Name="resetEdit">
      <Documentation>
        <UserDocu>Reset (end) the current editing.
resetEdit() -> None
        </UserDocu>
      </Documentation>
    </Methode>
    <Methode Name="addAnnotation">
      <Documentation>
        <UserDocu>Add an Inventor object
addAnnotation(AnnoName,FileName,[ModName]) -> None
</UserDocu>
      </Documentation>
    </Methode>
    <Methode Name="update">
      <Documentation>
        <UserDocu>Update the view representations of all objects
update() -> None
</UserDocu>
      </Documentation>
    </Methode>
    <Methode Name="getObject">
      <Documentation>
        <UserDocu>Return the object with the given name
getObject(Name) -> Object or None</UserDocu>
      </Documentation>
    </Methode>
    <Methode Name="activeObject">
      <Documentation>
        <UserDocu>deprecated -- use ActiveObject</UserDocu>
      </Documentation>
    </Methode>
    <Methode Name="activeView">
      <Documentation>
        <UserDocu>deprecated -- use ActiveView</UserDocu>
      </Documentation>
    </Methode>
    <Methode Name="mdiViewsOfType" Const="true">
      <Documentation>
      <UserDocu>Return a list if mdi views of a given type
mdiViewsOfType(type) -> list of MDIView
</UserDocu>
      </Documentation>
    </Methode>
    <Methode Name="sendMsgToViews">
      <Documentation>
      <UserDocu>Send a message to all views of the document
sendMsgToViews(msg) -> None
</UserDocu>
      </Documentation>
    </Methode>
    <Methode Name="mergeProject">
      <Documentation>
        <UserDocu>Merges this document with another project file
mergeProject(filename) -> None
</UserDocu>
      </Documentation>
    </Methode>
    <Methode Name="toggleTreeItem">
      <Documentation>
        <UserDocu>Change TreeItem of a document object.
toggleTreeItem(DocObject,[flag=0]) -> None
--
flag can be 0:Toggle, 1:Collaps, 2:Expand
</UserDocu>
      </Documentation>
    </Methode>
    <Methode Name="scrollToTreeItem">
      <Documentation>
        <UserDocu>scroll the tree view to the item of a view object
scrollToTreeItem(ViewObject) -> None
</UserDocu>
      </Documentation>
    </Methode>
    <Methode Name="toggleInSceneGraph">
      <Documentation>
        <UserDocu>Add or remove view object from scene graph of all views depending on its canAddToSceneGraph()
toggleInSceneGraph(ViewObject) -> None
</UserDocu>
      </Documentation>
    </Methode>
    <Attribute Name="ActiveObject" ReadOnly="false">
      <Documentation>
        <UserDocu>The active object of the document</UserDocu>
      </Documentation>
      <Parameter Name="ActiveObject" Type="Object" />
    </Attribute>
    <Attribute Name="ActiveView" ReadOnly="false">
      <Documentation>
        <UserDocu>The active view of the document</UserDocu>
      </Documentation>
      <Parameter Name="ActiveView" Type="Object" />
    </Attribute>
    <Attribute Name="EditingTransform">
      <Documentation>
        <UserDocu>The editing transformation matrix</UserDocu>
      </Documentation>
      <Parameter Name="EditingTransform" Type="Object" />
    </Attribute>
    <Attribute Name="InEditInfo">
      <Documentation>
        <UserDocu>A tuple(obj,subname,subElement,editMode) of editing object reference, or None if no object is in edit</UserDocu>
      </Documentation>
    <Parameter Name="InEditInfo" Type="Object" />
    </Attribute>
    <Attribute Name="EditMode" ReadOnly="true">
      <Documentation>
        <UserDocu>Current edit mode. Only meaningful when there is a current object in edit</UserDocu>
      </Documentation>
    <Parameter Name="EditMode" Type="Int" />
    </Attribute>
    <Attribute Name="Document" ReadOnly="true">
      <Documentation>
        <UserDocu>The related App document to this Gui document</UserDocu>
      </Documentation>
      <Parameter Name="Document" Type="Object" />
    </Attribute>
    <Attribute Name="Transacting" ReadOnly="true">
      <Documentation>
        <UserDocu>Indicate whether the document is undoing/redoing</UserDocu>
      </Documentation>
      <Parameter Name="Transacting" Type="Boolean" />
    </Attribute>
    <Attribute Name="Modified" ReadOnly="true">
      <Documentation>
        <UserDocu>Returns True if the document is marked as modified, and False otherwise</UserDocu>
      </Documentation>
      <Parameter Name="Modified" Type="Boolean" />
    </Attribute>
  </PythonExport>
</GenerateModel>
