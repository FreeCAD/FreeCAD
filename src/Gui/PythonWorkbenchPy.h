
// This file is generated by src/Tools/generateTemaplates/templateClassPyExport.py out of the XML file
// Every change you make here get lost at the next full rebuild!
#ifndef GUI_PYTHONWORKBENCHPY_H
#define GUI_PYTHONWORKBENCHPY_H

#include <Gui/WorkbenchPy.h>
#include <Gui/Workbench.h>
#include <string>

namespace Gui
{

//===========================================================================
// PythonWorkbenchPy - Python wrapper
//===========================================================================

/** The python export class for PythonBaseWorkbench
 */
class GuiExport PythonWorkbenchPy : public Gui::WorkbenchPy
{
public:
    static PyTypeObject   Type;
    static PyMethodDef    Methods[];
    static PyGetSetDef    GetterSetter[];
    virtual PyTypeObject *GetType(void) {return &Type;};

public:
    PythonWorkbenchPy(PythonBaseWorkbench *pcObject, PyTypeObject *T = &Type);
    static PyObject *PyMake(struct _typeobject *, PyObject *, PyObject *);
    virtual int PyInit(PyObject* args, PyObject*k);
    ~PythonWorkbenchPy();

    typedef PythonBaseWorkbench* PointerType ;

    virtual PyObject *_repr(void);        // the representation
    std::string representation(void) const;

    /** @name callbacks and implementers for the python object methods */
    //@{
    /// callback for the appendMenu() method
    static PyObject * staticCallback_appendMenu (PyObject *self, PyObject *args);
    /// implementer for the appendMenu() method
    PyObject*  appendMenu(PyObject *args);
    /// callback for the removeMenu() method
    static PyObject * staticCallback_removeMenu (PyObject *self, PyObject *args);
    /// implementer for the removeMenu() method
    PyObject*  removeMenu(PyObject *args);
    /// callback for the listMenus() method
    static PyObject * staticCallback_listMenus (PyObject *self, PyObject *args);
    /// implementer for the listMenus() method
    PyObject*  listMenus(PyObject *args);
    /// callback for the appendContextMenu() method
    static PyObject * staticCallback_appendContextMenu (PyObject *self, PyObject *args);
    /// implementer for the appendContextMenu() method
    PyObject*  appendContextMenu(PyObject *args);
    /// callback for the removeContextMenu() method
    static PyObject * staticCallback_removeContextMenu (PyObject *self, PyObject *args);
    /// implementer for the removeContextMenu() method
    PyObject*  removeContextMenu(PyObject *args);
    /// callback for the appendToolbar() method
    static PyObject * staticCallback_appendToolbar (PyObject *self, PyObject *args);
    /// implementer for the appendToolbar() method
    PyObject*  appendToolbar(PyObject *args);
    /// callback for the removeToolbar() method
    static PyObject * staticCallback_removeToolbar (PyObject *self, PyObject *args);
    /// implementer for the removeToolbar() method
    PyObject*  removeToolbar(PyObject *args);
    /// callback for the listToolbars() method
    static PyObject * staticCallback_listToolbars (PyObject *self, PyObject *args);
    /// implementer for the listToolbars() method
    PyObject*  listToolbars(PyObject *args);
    /// callback for the appendCommandbar() method
    static PyObject * staticCallback_appendCommandbar (PyObject *self, PyObject *args);
    /// implementer for the appendCommandbar() method
    PyObject*  appendCommandbar(PyObject *args);
    /// callback for the removeCommandbar() method
    static PyObject * staticCallback_removeCommandbar (PyObject *self, PyObject *args);
    /// implementer for the removeCommandbar() method
    PyObject*  removeCommandbar(PyObject *args);
    /// callback for the listCommandbars() method
    static PyObject * staticCallback_listCommandbars (PyObject *self, PyObject *args);
    /// implementer for the listCommandbars() method
    PyObject*  listCommandbars(PyObject *args);
    /// callback for the AppendMenu() method
    static PyObject * staticCallback_AppendMenu (PyObject *self, PyObject *args);
    /// implementer for the AppendMenu() method
    PyObject*  AppendMenu(PyObject *args);
    /// callback for the RemoveMenu() method
    static PyObject * staticCallback_RemoveMenu (PyObject *self, PyObject *args);
    /// implementer for the RemoveMenu() method
    PyObject*  RemoveMenu(PyObject *args);
    /// callback for the ListMenus() method
    static PyObject * staticCallback_ListMenus (PyObject *self, PyObject *args);
    /// implementer for the ListMenus() method
    PyObject*  ListMenus(PyObject *args);
    /// callback for the AppendContextMenu() method
    static PyObject * staticCallback_AppendContextMenu (PyObject *self, PyObject *args);
    /// implementer for the AppendContextMenu() method
    PyObject*  AppendContextMenu(PyObject *args);
    /// callback for the RemoveContextMenu() method
    static PyObject * staticCallback_RemoveContextMenu (PyObject *self, PyObject *args);
    /// implementer for the RemoveContextMenu() method
    PyObject*  RemoveContextMenu(PyObject *args);
    /// callback for the AppendToolbar() method
    static PyObject * staticCallback_AppendToolbar (PyObject *self, PyObject *args);
    /// implementer for the AppendToolbar() method
    PyObject*  AppendToolbar(PyObject *args);
    /// callback for the RemoveToolbar() method
    static PyObject * staticCallback_RemoveToolbar (PyObject *self, PyObject *args);
    /// implementer for the RemoveToolbar() method
    PyObject*  RemoveToolbar(PyObject *args);
    /// callback for the ListToolbars() method
    static PyObject * staticCallback_ListToolbars (PyObject *self, PyObject *args);
    /// implementer for the ListToolbars() method
    PyObject*  ListToolbars(PyObject *args);
    /// callback for the AppendCommandbar() method
    static PyObject * staticCallback_AppendCommandbar (PyObject *self, PyObject *args);
    /// implementer for the AppendCommandbar() method
    PyObject*  AppendCommandbar(PyObject *args);
    /// callback for the RemoveCommandbar() method
    static PyObject * staticCallback_RemoveCommandbar (PyObject *self, PyObject *args);
    /// implementer for the RemoveCommandbar() method
    PyObject*  RemoveCommandbar(PyObject *args);
    /// callback for the ListCommandbars() method
    static PyObject * staticCallback_ListCommandbars (PyObject *self, PyObject *args);
    /// implementer for the ListCommandbars() method
    PyObject*  ListCommandbars(PyObject *args);
    //@}


    /** @name callbacks and implementers for the python object attributes */
    //@{
    //@}

    /// getter method for special attributes (e.g. dynamic ones)
    PyObject *getCustomAttributes(const char* attr) const;
    /// setter for special attributes (e.g. dynamic ones)
    /// Output: Success=1, Failure=-1, Ignore=0
    int setCustomAttributes(const char* attr, PyObject *obj);
    PyObject *_getattr(char *attr);              // __getattr__ function
    int _setattr(char *attr, PyObject *value);        // __setattr__ function

    /// getter for the object handled by this class
    PythonBaseWorkbench *getPythonBaseWorkbenchPtr(void) const;

    /** @name additional declarations and methods for the wrapper class */
    //@{

    //@}
};

}  //namespace Gui

#endif  // GUI_PYTHONWORKBENCHPY_H


