
// This file is generated by src/Tools/generateTemplates/templateClassPyExport.py out of the XML file
// Every change you make here gets lost in the next full rebuild!
#ifndef MATERIALS_ARRAY3DPY_H
#define MATERIALS_ARRAY3DPY_H

#include <CXX/Objects.hxx>
#include <Base/BaseClassPy.h>
#include <Mod/Material/App/MaterialValue.h>
#include <string>


namespace Materials
{

//===========================================================================
// Array3DPy - Python wrapper
//===========================================================================

/** The python export class for Array3D
 */
class MaterialsExport Array3DPy : public Base::BaseClassPy
{
protected:
    ~Array3DPy() override;

public:
    static PyTypeObject   Type;
    static PyMethodDef    Methods[];
    static PyGetSetDef    GetterSetter[];
    PyTypeObject *GetType() const override {return &Type;}

public:
    Array3DPy(Array3D *pcObject, PyTypeObject *T = &Type);
    static PyObject *PyMake(PyTypeObject *, PyObject *, PyObject *);
    int PyInit(PyObject* args, PyObject*k) override;


    using PointerType = Array3D*;

    PyObject *_repr() override;        // the representation
    std::string representation() const;

    /** @name callbacks and implementers for the python object methods */
    //@{
    /// callback for the getRows() method
    static PyObject * staticCallback_getRows (PyObject *self, PyObject *args);
    /// implementer for the getRows() method
    PyObject*  getRows(PyObject *args) const;
    /// callback for the getValue() method
    static PyObject * staticCallback_getValue (PyObject *self, PyObject *args);
    /// implementer for the getValue() method
    PyObject*  getValue(PyObject *args) const;
    /// callback for the getDepthValue() method
    static PyObject * staticCallback_getDepthValue (PyObject *self, PyObject *args);
    /// implementer for the getDepthValue() method
    PyObject*  getDepthValue(PyObject *args) const;
    /// callback for the setDepthValue() method
    static PyObject * staticCallback_setDepthValue (PyObject *self, PyObject *args);
    /// implementer for the setDepthValue() method
    PyObject*  setDepthValue(PyObject *args);
    /// callback for the setValue() method
    static PyObject * staticCallback_setValue (PyObject *self, PyObject *args);
    /// implementer for the setValue() method
    PyObject*  setValue(PyObject *args);
    /// callback for the setRows() method
    static PyObject * staticCallback_setRows (PyObject *self, PyObject *args);
    /// implementer for the setRows() method
    PyObject*  setRows(PyObject *args);
    //@}


    /** @name callbacks and implementers for the python object attributes */
    //@{
    ///getter callback for the Array attribute
    static PyObject * staticCallback_getArray (PyObject *self, void *closure);
    /// getter for the Array attribute
    Py::List getArray() const;
    /// setter callback for the Array attribute
    static int staticCallback_setArray (PyObject *self, PyObject *value, void *closure);
    // no setter method,  Array is read only!
    ///getter callback for the Dimensions attribute
    static PyObject * staticCallback_getDimensions (PyObject *self, void *closure);
    /// getter for the Dimensions attribute
    Py::Long getDimensions() const;
    /// setter callback for the Dimensions attribute
    static int staticCallback_setDimensions (PyObject *self, PyObject *value, void *closure);
    // no setter method,  Dimensions is read only!
    ///getter callback for the Columns attribute
    static PyObject * staticCallback_getColumns (PyObject *self, void *closure);
    /// getter for the Columns attribute
    Py::Long getColumns() const;
    /// setter callback for the Columns attribute
    static int staticCallback_setColumns (PyObject *self, PyObject *value, void *closure);
    /// setter for the Columns attribute
    void setColumns(Py::Long arg);
    ///getter callback for the Depth attribute
    static PyObject * staticCallback_getDepth (PyObject *self, void *closure);
    /// getter for the Depth attribute
    Py::Long getDepth() const;
    /// setter callback for the Depth attribute
    static int staticCallback_setDepth (PyObject *self, PyObject *value, void *closure);
    /// setter for the Depth attribute
    void setDepth(Py::Long arg);
    //@}

    /// getter method for special attributes (e.g. dynamic ones)
    PyObject *getCustomAttributes(const char* attr) const;
    /// setter for special attributes (e.g. dynamic ones)
    /// Output: Success=1, Failure=-1, Ignore=0
    int setCustomAttributes(const char* attr, PyObject *obj);
    PyObject *_getattr(const char *attr) override;              // __getattr__ function
    int _setattr(const char *attr, PyObject *value) override;   // __setattr__ function

    /// getter for the object handled by this class
    Array3D *getArray3DPtr() const;

};

}  //namespace Materials

#endif  // MATERIALS_ARRAY3DPY_H


