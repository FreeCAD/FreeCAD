# SPDX-License-Identifier: LGPL-2.1-or-later
# ***************************************************************************
# *                                                                         *
# *   Copyright (c) 2023 0penBrain.                                         *
# *                                                                         *
# *   This file is part of FreeCAD.                                         *
# *                                                                         *
# *   FreeCAD is free software: you can redistribute it and/or modify it    *
# *   under the terms of the GNU Lesser General Public License as           *
# *   published by the Free Software Foundation, either version 2.1 of the  *
# *   License, or (at your option) any later version.                       *
# *                                                                         *
# *   FreeCAD is distributed in the hope that it will be useful, but        *
# *   WITHOUT ANY WARRANTY; without even the implied warranty of            *
# *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU      *
# *   Lesser General Public License for more details.                       *
# *                                                                         *
# *   You should have received a copy of the GNU Lesser General Public      *
# *   License along with FreeCAD. If not, see                               *
# *   <https://www.gnu.org/licenses/>.                                      *
# *                                                                         *
# ***************************************************************************

# This is a generic wrapup workflow that only aims at gathering reports and ...
# ... presenting them as a unified summary
#
# It expects steps to be summarized to be presented a JSON input formatted ...
# ... as the "needs" context of Github :
# https://docs.github.com/en/actions/learn-github-actions/contexts#needs-context
# In addition to standard "result", each step shall have a string entry in "outputs" ...
# ... named "reportFile" containing the name of the corresponding report. The ...
# ... report file shall be available in an artifact with the same name.

name: WrapUp
on:
  workflow_call:
    inputs:
      previousSteps:
        type: string
        required: true

jobs:

  WrapUp:
    runs-on: ubuntu-latest
    env:
      artifactsDownloadDir: /tmp/artifacts/
    defaults:
      run:
        shell: bash

    steps:
      - name: Make needed directories, files and initializations
        run: |
          mkdir -p ${{ env.artifactsDownloadDir }}
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ${{ env.artifactsDownloadDir }}
      - name: Save input data to file
        run: |
          cat > data << "EOD"
          ${{ inputs.previousSteps }}
          EOD
      - name: Compute the report
        run: python3 .github/workflows/compute_report.py
        env:
          GITHUB_ENV: ${{ env.GITHUB_ENV }}
          GITHUB_STEP_SUMMARY: ${{ env.GITHUB_STEP_SUMMARY }}
          artifactsDownloadDir: ${{ env.artifactsDownloadDir }}
      - name: Delete used artifacts
        continue-on-error: true
        uses: geekyeggo/delete-artifact@v5
        with:
          name: |
            ${{ env.usedArtifacts }}
